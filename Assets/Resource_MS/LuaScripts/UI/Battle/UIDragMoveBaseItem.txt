---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liuyubao.
--- DateTime: 2022/1/21 10:20
---@class UIDragMoveBaseItem
local UIDragMoveBaseItem = SimpleClassUtil:class()

function UIDragMoveBaseItem:initialize( transform)
    self:statementVar( transform)
    self:initCom(transform)
    self:setClick(transform)
    self:setDragEvent()
end

function UIDragMoveBaseItem:statementVar(transform)
    self._transform = transform
    self._isBelong = false
    self._scroll = {}
    self._isStartDrag = false
    self._isDragIng = false
    self._isSlant = false
    self._pos_startD = Vector2_CS.zero
end

function UIDragMoveBaseItem:initCom(transform)

end

function UIDragMoveBaseItem:setIsBelongScroll(isBelong,scroll)
    self:setIsBelong(isBelong)
    if isBelong then
        if scroll then
            self:setScroll(scroll)
        else
            logError("scroll == nil !!!!")
        end
    end
end
--- 废弃 不用了
function UIDragMoveBaseItem:setDelegate(star,ing,endDrag,click)
    self._starDrag = star
    self._ingDrag = ing
    self._endDrag = endDrag
    self._click = click
end

function UIDragMoveBaseItem:getEventTarget()
    return  self._transform
end

function UIDragMoveBaseItem:setDragEvent()
    local transform = self:getEventTarget()
    UIUtils:AddUIEvent_PointData(LUAUIBase.UIEventType.OnDragBeginOMP,transform.gameObject, function(obj,eventData)
        self:onBeginDrag(obj,eventData)
    end)
    UIUtils:AddUIEvent_PointData(LUAUIBase.UIEventType.OnDragIngOMP,transform.gameObject,function (obj,eventData)
        self:onDrag(obj,eventData)
    end)

    UIUtils:AddUIEvent_PointData(LUAUIBase.UIEventType.onEndDragOPM,transform.gameObject,function (obj,eventData)
        self:onEndDrag(obj,eventData)
    end)

    UIUtils:AddUIEvent(LUAUIBase.UIEventType.OnClick,transform.gameObject,function (obj)
        self:onClick(obj)
    end,self)

end

function UIDragMoveBaseItem:setClick(transform)

end

---可能会被上层的button阻挡，注意！！！
function UIDragMoveBaseItem:clickEvent()
    logError("overwrite me ：clickEvent")
end

function UIDragMoveBaseItem:beginEvent(eventData)
    logError("overwrite me ：beginEvent")
end

function UIDragMoveBaseItem:ingEvent(eventData,vec,isSlant)
    logError("overwrite me ：ingEvent")
end

function UIDragMoveBaseItem:endEvent(eventData,isSlant)
    logError("overwrite me ：endEvent")
end


function UIDragMoveBaseItem:onClick(obj)
    if self:isCanDrag() then
        self:clickEvent()
    end
end

function UIDragMoveBaseItem:onBeginDrag(obj,eventData)
    if self:isCanDrag() then
        self._pos_startD = eventData.position
        self:setIsStartDrag(true)
        self:beginEvent(eventData)
        --if self._starDrag then
        --    self._starDrag(self,eventData)
        --end
    end
    if self:getIsBelong() then
        self:getScroll():OnBeginDrag(eventData)
    end
end

function UIDragMoveBaseItem:onDrag(obj,eventData)
    if self:isCanDrag() then
        if self._pos_startD ~= eventData.position then
            if self:getIsStartDrag()  then
                self:setIsStartDrag(false)
                self:setIsSlant(self:getIsSlantDrag(eventData) )
                if self:getIsBelong() then
                    self:getScroll().enabled = not self:getIsSlant()
                end
            end
            local vec = LC.ScreenPointToWorldPointInRectangle(self._transform.gameObject,eventData)
            self:ingEvent(eventData,vec,self:getIsSlant())
            --if self._ingDrag then
            --    self._ingDrag(self,eventData,vec,self:getIsSlant())
            --end
        end
    end
end

function UIDragMoveBaseItem:getIsSlantDrag(eventData)
    return UIUtils:getIsSlantDrag(self._pos_startD,eventData.position,self:slantDragAngle())
end

function UIDragMoveBaseItem:slantDragAngle()
    return 85
end

function UIDragMoveBaseItem:onEndDrag(obj,eventData)
    if self:isCanDrag() then
        self:setIsDragIng(false)
        self:endEvent(eventData,self:getIsSlant())
        --if self._endDrag then
        --    self._endDrag(self,eventData)
        --end
    end
    if self:getIsBelong() then
        self:getScroll().enabled = true
        self:getScroll():OnEndDrag(eventData)
    end
    self:setIsSlant(false )
end

function UIDragMoveBaseItem:isCanDrag()
    return true
end

function UIDragMoveBaseItem:readyCloseUI()

end

function UIDragMoveBaseItem:getIsStartDrag()
    return self._isStarDrag
end

function UIDragMoveBaseItem:setIsStartDrag(isDrag)
    self._isStarDrag = isDrag
end

function UIDragMoveBaseItem:getIsBelong()
    return self._isBelong
end

function UIDragMoveBaseItem:setIsBelong(isBelong)
    self._isBelong = isBelong
end

function UIDragMoveBaseItem:getScroll()
    return self._scroll
end

function UIDragMoveBaseItem:setScroll(scroll)
    self._scroll = scroll
end

function UIDragMoveBaseItem:getIsDragIng()
    return self._isDragIng
end

function UIDragMoveBaseItem:setIsDragIng(isDragIng)
    self._isDragIng = isDragIng
end

function UIDragMoveBaseItem:getIsSlant()
    return self._isSlant
end

function UIDragMoveBaseItem:setIsSlant(isSlant)
    self._isSlant = isSlant
end

return UIDragMoveBaseItem