---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liuyubao.
--- DateTime: 2021/12/17 14:40
---
---@class Queue @双端队列
local Queue = SimpleClassUtil:class()

function Queue:initialize()
    -- super.initialize(self)
    self.first = 1
    self.last = 1
    self.Count = 0
    ---@type table<number, any>
    self.elems = {}
end

---@return number
function Queue:size()
    return self.last - self.first
end

---@param elem any
function Queue:pushBack(elem)
    self.elems[self.last] = elem
    self.last = self.last + 1
    self.Count = self.Count + 1
end

function Queue:peekBack()
    if self.last > self.first then
        return self.elems[self.last-1]
    end
end

function Queue:popBack()
    if self.last > self.first then
        self.last = self.last - 1
        self.Count = self.Count - 1
        local v = self.elems[self.last]
        self.elems[self.last] = nil
        return v
    end
end

function Queue:pushFront(elem)
    self.first = self.first - 1
    self.Count = self.Count + 1
    self.elems[self.first] = elem
end

function Queue:peekFront()
    if self.last > self.first then
        return self.elems[self.first]
    end
end

---@return any
function Queue:popFront()
    if self.last > self.first then
        local v = self.elems[self.first]
        self.elems[self.first] = nil
        self.first = self.first + 1
        self.Count = self.Count - 1
        return v
    end
end

---@return any
function Queue:clear()
    for i=self.first,self.last-1 do
        self.elems[i] = nil
    end
    self.first = 1
    self.last = 1
    self.Count = 0
end

local function _pair_func(_t, i)
    if i<_t.last then
        local v = _t.elems[i]
        i = i + 1
        return i, v
    end
end

function Queue:pairs()
    return _pair_func , self, self.first
end

---获取第i顺位的值，失败返回nil
---@param i @小于0，是队尾顺位：如-2返回倒数第二个值；大于0，则是队首顺位；0是非法值，行为不确定。
function Queue:at(i)
    if i<0 then
        i = self.last + i
    else
        i = self.first+i-1
    end
    return self.elems[i]
end

return Queue
