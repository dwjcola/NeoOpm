---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liuyubao.
--- DateTime: 2022/2/15 17:55
---@class BattleLogicEventHandle
local BattleLogicEventHandle = SimpleClassUtil:class()

local handleMap = {
    [Enum_Battle.TimeLineEventType.Art]               = "handleArtEvent",
    [Enum_Battle.TimeLineEventType.Sound]             = "handleSoundEvent",
    [Enum_Battle.TimeLineEventType.Cast]              = "handleCastEvent",
    [Enum_Battle.TimeLineEventType.Animation]         = "handleAnimationEvent",
    [Enum_Battle.TimeLineEventType.Attack]            = "handleAttackEvent",
    [Enum_Battle.TimeLineEventType.Missle]            = "handleMissleEvent",
    [Enum_Battle.TimeLineEventType.MovePos]           = "handleMovePosEvent",
    [Enum_Battle.TimeLineEventType.Blackout]          = "handleBlackoutEvent",
    [Enum_Battle.TimeLineEventType.UnBreakOffStart]   = "handleUnBreakOffStartEvent",
    [Enum_Battle.TimeLineEventType.UnBreakOffEnd]     = "handleUnBreakOffEndEvent",
}

function BattleLogicEventHandle:initialize()

end
---@param blackBoard BlackBoard_BattleBase
---@param agent Agent
function BattleLogicEventHandle:handleSkillFrameInfo(blackBoard,agent,frameInfo,frameCount,skillTag)
    for _, frameData in ipairs(frameInfo) do
        if frameData then
            BattleLogicEventHandle:handleSkillFrameData(blackBoard,agent,frameData)
        end
    end
end
---@param blackBoard BlackBoard_BattleBase
---@param agent Agent
---@param frameData FrameDataBase
function BattleLogicEventHandle:handleSkillFrameData(blackBoard,agent,frameData)
    if frameData and frameData.type and handleMap[frameData.type] and self[handleMap[frameData.type]] then
        self[handleMap[frameData.type]](self,blackBoard,agent,frameData)
    end
end
---@param agent Agent
---@param blackBoard BlackBoard_BattleBase
---@param frameData ArtFrameData
function BattleLogicEventHandle:handleArtEvent(blackBoard,agent,frameData)

end
---@param agent Agent
---@param blackBoard BlackBoard_BattleBase
---@param frameData SoundFrameData
function BattleLogicEventHandle:handleSoundEvent(blackBoard,agent,frameData)

end
---@param agent Agent
---@param blackBoard BlackBoard_BattleBase
---@param frameData CastFrameData
function BattleLogicEventHandle:handleCastEvent(blackBoard,agent,frameData)

end
---@param agent Agent
---@param blackBoard BlackBoard_BattleBase
---@param frameData AnimationFrameData
function BattleLogicEventHandle:handleAnimationEvent(blackBoard,agent,frameData)
    local data = {uid = blackBoard._uid,aniName = frameData.aniName,isReset = true,speed = agent._battleManager:getBattleSpeed()}
    EventManager:Dispatch_battle(EventType.Event_Battle_Render_SwitchAni, data)
end
---@param agent Agent
---@param blackBoard BlackBoard_BattleBase
---@param frameData EventFrameData
function BattleLogicEventHandle:handleAttackEvent(blackBoard,agent,frameData)

end
---@param agent Agent
---@param blackBoard BlackBoard_BattleBase
---@param frameData EventFrameData
function BattleLogicEventHandle:handleMissleEvent(blackBoard,agent,frameData)

end
---@param agent Agent
---@param blackBoard BlackBoard_BattleBase
---@param frameData EventFrameData
function BattleLogicEventHandle:handleMovePosEvent(blackBoard,agent,frameData)
    if frameData and frameData.movParam then
        local movParam = frameData.movParam or {}
        for i, v in ipairs(movParam) do
            if v and v[1] == frameData.eventTag then
                blackBoard._skill_moveSpeed = v[2] or 0
                blackBoard._skill_moveFrame = v[3] or 0
                return
            end
        end
        BattleLog.error("movParam 中没有  tag  == ",frameData.eventTag,"  的移动数据")
    end
end
---@param agent Agent
---@param blackBoard BlackBoard_BattleBase
---@param frameData EventFrameData
function BattleLogicEventHandle:handleBlackoutEvent(blackBoard,agent,frameData)

    -- todo  战斗黑屏  其他人停止update

    local data = {uid = blackBoard._uid,openType = frameData.eventTag}
    --EventManager:Dispatch_battle(EventType.Event_Battle_Render_SwitchAni, data)

end

---@param agent Agent
---@param blackBoard BlackBoard_BattleBase
---@param frameData UnBreakOffStartFrameData
function BattleLogicEventHandle:handleUnBreakOffStartEvent(blackBoard,agent,frameData)

    blackBoard._smallSkillContBeBreak = true
end


---@param agent Agent
---@param blackBoard BlackBoard_BattleBase
---@param frameData UnBreakOffEndFrameData
function BattleLogicEventHandle:handleUnBreakOffEndEvent(blackBoard,agent,frameData)
    blackBoard._smallSkillContBeBreak = false
end
return BattleLogicEventHandle