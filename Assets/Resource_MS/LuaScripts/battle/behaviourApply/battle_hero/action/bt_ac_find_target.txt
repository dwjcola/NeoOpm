---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lyb.
--- DateTime: 2021/12/8 0:03
--- 叶子节点
---@class bt_ac_find_target : IAction
local bt_ac_find_target = SimpleClassUtil:class(IAction)


function bt_ac_find_target:initialize()
    IAction.initialize(self)
end

function bt_ac_find_target:initData(data)

end

---@param blackBoard BlackBoard_BattleBase
function bt_ac_find_target:doAction(blackBoard,agent)
    local result = Enum_BT.Node_ResultType.Fail
    if blackBoard._enmityIndex == 0 then
        result = Enum_BT.Node_ResultType.Fail
        blackBoard._find_target_pos = nil
    else
        --- @type BattleEntityContext
        local _entityContext = agent._entityContext
        --- @type BattleCharacter
        local _enemyEntity = _entityContext:getEnemyEntityByIndex(blackBoard._campType,blackBoard._enmityIndex)
        if _enemyEntity  and _enemyEntity:getData()._alive == true and  _enemyEntity:getData()._isCanBeSelected == true then
            local skillData = blackBoard._skillData[Enum_Battle.SkillTag.Skill_5]
            if skillData then
                local self_pos = blackBoard._position
                local place_target = blackBoard._find_target_pos
                if place_target == nil  then
                    local target =  _enemyEntity:getData()._position
                    local normalVec = Vector3.Normalize(target - self_pos)
                    local _volume_r = blackBoard._isCloseIn and  _enemyEntity:getData()._volume_r or 0
                    local attack_r = skillData._skill_r + _volume_r
                    place_target = target - (normalVec * attack_r)
                end
                local isHandleSuss ,tmp_pos = self:handleTarget_place_r(place_target,nil,_entityContext,blackBoard._campType,blackBoard._uid)
                if isHandleSuss then
                    place_target = tmp_pos
                    blackBoard._find_target_pos = place_target
                else
                    blackBoard._find_target_pos = nil
                end
                result = Enum_BT.Node_ResultType.Success
            else
                BattleLog.error("SkillData 没有 普工技能数据 ！！！")
                blackBoard._find_target_pos = nil
                result = Enum_BT.Node_ResultType.Fail
            end
        else
            blackBoard._find_target_pos = nil
            result = Enum_BT.Node_ResultType.Fail
        end
    end
    return result
end

---@param oriVec Vector3
---@param tmpVec Vector3
---@param entityContext BattleEntityContext
function bt_ac_find_target:handleTarget_place_r(oriVec,tmpVec,entityContext,camp,uid)
    --Logger.error(uid,"    ",oriVec,tmpVec)
    if tmpVec and oriVec.x == tmpVec.x and oriVec.y == tmpVec.y  then
        return false,tmpVec
    end
    if tmpVec == nil then
        tmpVec = oriVec
    end
    local self_entityList = entityContext:getEntityListByCamp(camp)
    local enemy_entityList = entityContext:getEnemyEntityList(camp)
    for i, entity in pairs(self_entityList) do
        if entity:getData()._uid ~= uid then
            local entity_pos = entity:getData()._position
            local place_r = entity:getData()._place_r
            local dis = Vector3.Distance(tmpVec,entity_pos)
            --Logger.error(dis)
            if dis < place_r then
                local tmpDic = tmpVec - entity_pos
                local tmp = BattleMathUtils.AngleAxis_Y_V3(tmpDic,-1)
                return self:handleTarget_place_r(oriVec,entity_pos + tmp,entityContext,camp,uid)
            end
        end
    end
    --for i, entity in pairs(enemy_entityList) do
    --    local entity_pos = entity:getData()._position
    --    local place_r = entity:getData()._place_r
    --    local dis = Vector3.Distance(tmpVec,entity_pos)
    --    if dis < place_r then
    --        local tmp = BattleMathUtils.AngleAxis_Y_V3(tmpVec,1)
    --
    --        return self:handleTarget_place_r(oriVec,tmp,entityContext,camp,uid)
    --    end
    --end
    return true,tmpVec
end


return bt_ac_find_target