---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lyb.
--- DateTime: 2021/12/8 0:03
--- 叶子节点
---@class bt_ac_malposed_findWay : IAction
local bt_ac_malposed_findWay = SimpleClassUtil:class(IAction)


function bt_ac_malposed_findWay:initialize()
    IAction.initialize(self)
end

function bt_ac_malposed_findWay:initData(data)

end
---@param blackBoard BlackBoard_BattleBase
function bt_ac_malposed_findWay:doAction(blackBoard,agent)
    local result = Enum_BT.Node_ResultType.Fail
    local dislocation_target = blackBoard._pos_dislocation
    if dislocation_target then
        --Logger.error(" ********** uid == ",blackBoard._uid)
        local self_pos = blackBoard._position
        local moveSpeed = 0.1
        local dis = Vector3.Distance(self_pos,dislocation_target)
        local moveVec = Vector3.Normalize(dislocation_target - self_pos) * moveSpeed
        if dis <= BattleConstant.Dist_r then
            result = Enum_BT.Node_ResultType.Success
        else
            local newPos = self_pos + moveVec
            if moveVec:Magnitude() > dis then
                newPos = dislocation_target
            end
            --- @type PVE_Config_Battle_Manager
            local battleManager = agent._battleManager
            local data = {uid = blackBoard._uid,newPos = newPos,time = battleManager._interval}
            EventManager:Dispatch_battle(EventType.Event_Battle_Render_Move_Line,data)
            blackBoard._position = newPos
            result = Enum_BT.Node_ResultType.Running
        end
    end

    return result
end

return bt_ac_malposed_findWay
