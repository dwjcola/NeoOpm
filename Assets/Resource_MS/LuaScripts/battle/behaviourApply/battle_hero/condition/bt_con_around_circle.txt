---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liuyubao.
--- DateTime: 2022/2/11 19:11
--- 圆形范围判定
---@class bt_con_around_circle
local bt_con_around_circle = SimpleClassUtil:class(ICondition)
---@param skillData SkillData
function bt_con_around_circle:initData(skillData)
   self._skillData = skillData
end
---@param blackBoard BlackBoard_BattleBase
function bt_con_around_circle:doCondition(blackBoard,agent,dt)
    local result = Enum_BT.Node_ResultType.Fail
    if blackBoard._enmityIndex == 0 then
        result = Enum_BT.Node_ResultType.Fail
    else
        if self._skillData then
            local rangerParams = self._skillData._skill_launch_ranger_params or {}
            local attack_r = rangerParams[1] or 0
            --- @type BattleEntityContext
            local _entityContext = agent._entityContext
            --- @type BattleCharacter[]
            local _enemyEntity_list = _entityContext:getEnemyEntityList(blackBoard._campType)
            for i, _enemyEntity in pairs(_enemyEntity_list) do
                if _enemyEntity  and _enemyEntity:getData()._alive == true and  _enemyEntity:getData()._isCanBeSelected == true then
                     attack_r = attack_r + (blackBoard._isCloseIn and _enemyEntity:getData()._volume_r or 0)
                     local self_pos = blackBoard._position
                     local target_pos =  _enemyEntity:getData()._position
                     local dis = Vector3.Distance(self_pos,target_pos)
                     if dis <= attack_r then
                         result = Enum_BT.Node_ResultType.Success
                         break
                     end
                end
            end
        end
    end
    return result
end

return bt_con_around_circle