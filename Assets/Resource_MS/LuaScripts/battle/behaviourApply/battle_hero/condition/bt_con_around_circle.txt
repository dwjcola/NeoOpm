---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liuyubao.
--- DateTime: 2022/2/11 19:11
--- 圆形范围判定
---@class bt_con_around_circle
local bt_con_around_circle = SimpleClassUtil:class(ICondition)
---@param skillData SkillData
function bt_con_around_circle:initData(skillData)
   self._skillData = skillData
end
---@param blackBoard BlackBoard_BattleBase
function bt_con_around_circle:doCondition(blackBoard,agent,dt)
    local result = Enum_BT.Node_ResultType.Fail
    if blackBoard._enmityIndex == 0 then
        result = Enum_BT.Node_ResultType.Fail
    else
        if self._skillData then
            local rangerParams = self._skillData._skill_launch_ranger_params or {}
            local attack_r = rangerParams[1] or 0
            --- @type BattleEntityContext
            local _entityContext = agent._entityContext
            --- @type BattleCharacter[]
            local _enemyEntity_list = _entityContext:getEnemyEntityList(blackBoard._campType)
            for i, _enemyEntity in pairs(_enemyEntity_list) do
                if _enemyEntity  and _enemyEntity:getData()._alive == true and  _enemyEntity:getData()._isCanBeSelected == true then
                     attack_r = attack_r + (blackBoard._isCloseIn and _enemyEntity:getData()._volume_r or 0)
                     local self_pos = blackBoard._position
                     local target_pos =  _enemyEntity:getData()._position
                     local dis = Vector3.Distance(self_pos,target_pos) - attack_r

                end
            end
        end



        --- @type BattleEntityContext
        local _entityContext = agent._entityContext
        --- @type BattleCharacter
        local _enemyEntity = _entityContext:getEnemyEntityByIndex(blackBoard._campType,blackBoard._enmityIndex)
        if _enemyEntity  and _enemyEntity:getData()._alive == true and  _enemyEntity:getData()._isCanBeSelected == true then
            local self_pos = blackBoard._position
            local target =  _enemyEntity:getData()._position
            local dis = Vector3.Distance(self_pos,target)
            local skillData = blackBoard._skillData[Enum_Battle.SkillTag.Skill_5]

            if skillData then
                local attack_r = skillData._skill_r + (blackBoard._isCloseIn and _enemyEntity:getData()._volume_r or 0)
                dis = dis - attack_r
                if blackBoard._find_target_pos then
                    local disTarget = Vector3.Distance(blackBoard._position , blackBoard._find_target_pos)
                    if disTarget < BattleConstant.Dist_r then
                        if dis < BattleConstant.Dist_r then
                            result = Enum_BT.Node_ResultType.Success
                        else
                            BattleLog.error(" 已到达目的地 但 技能范围判定失败 ！！！！ uid ==  ",blackBoard._uid,"  dis  == ",dis,"   disTarget == ",disTarget)
                            result = Enum_BT.Node_ResultType.Fail
                        end
                    else
                        result = Enum_BT.Node_ResultType.Fail
                    end
                else
                    if dis < BattleConstant.Dist_r then
                        result = Enum_BT.Node_ResultType.Success
                    else
                        result = Enum_BT.Node_ResultType.Fail
                    end
                end
                --if dis < BattleConstant.Dist_r then
                --    result = Enum_BT.Node_ResultType.Success
                --else
                --    result = Enum_BT.Node_ResultType.Fail
                --end

            else
                BattleLog.error("SkillData 没有 普工技能数据 ！！！")
                result = Enum_BT.Node_ResultType.Fail
            end
        else
            result = Enum_BT.Node_ResultType.Fail
        end
    end
    return result
end

return bt_con_around_circle