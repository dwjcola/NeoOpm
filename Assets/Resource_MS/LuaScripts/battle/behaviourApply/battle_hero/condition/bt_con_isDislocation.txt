---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liuyubao.
--- DateTime: 2021/12/27 16:51
---
---
---@class bt_con_isDislocation:ICondition
local bt_con_isDislocation = SimpleClassUtil:class(ICondition)

function bt_con_isDislocation:initData(data)

end
---@param blackBoard BlackBoard_BattleBase
function bt_con_isDislocation:doCondition(blackBoard,agent)
    local result = Enum_BT.Node_ResultType.Fail
    if blackBoard._enmityIndex == 0 then
        blackBoard._dislocation_friend_entity = nil
        result = Enum_BT.Node_ResultType.Fail
    else
        local check_r = blackBoard._dislocation_r
        --- @type BattleEntityContext
        local _entityContext = agent._entityContext
        local self_entityList = _entityContext:getEntityListByCamp(blackBoard._campType)
        local len = 0
        ---@type BattleCharacter
        local friendEntity = nil
        for i, entity in pairs(self_entityList) do
            if entity:getData()._uid ~= blackBoard._uid then
                local entity_pos = entity:getData()._position
                local dis = Vector3.Distance(blackBoard._position,entity_pos)
                if dis < (check_r + entity:getData()._dislocation_r)  then
                    len = len + 1
                    friendEntity = entity
                end
            end
        end
        if len == 1 and friendEntity:getData()._enmityIndex == blackBoard._enmityIndex then
            local self_pos_z = blackBoard._position.z
            local friend_pos_z = friendEntity:getData()._position.z
            --- @type BattleCharacter
            local _enemyEntity = _entityContext:getEnemyEntityByIndex(blackBoard._campType,blackBoard._enmityIndex)
            if _enemyEntity and _enemyEntity:getData()._alive then
                local enemy_pos_z = _enemyEntity:getData()._position.z
                local self_z_abs = math.abs(self_pos_z - enemy_pos_z)
                local friend_z_abs = math.abs(friend_pos_z - enemy_pos_z)
                if self_z_abs <= friend_z_abs then
                    blackBoard._dislocation_friend_entity = friendEntity
                    result = Enum_BT.Node_ResultType.Success
                else
                    blackBoard._dislocation_friend_entity = nil
                    result = Enum_BT.Node_ResultType.Fail
                end
            else
                blackBoard._dislocation_friend_entity = nil
                result = Enum_BT.Node_ResultType.Fail
            end
        else
            blackBoard._dislocation_friend_entity = nil
            result = Enum_BT.Node_ResultType.Fail
        end
    end
    return result
end


return bt_con_isDislocation