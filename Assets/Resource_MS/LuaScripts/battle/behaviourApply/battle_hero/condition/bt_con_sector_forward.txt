---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liuyubao.
--- DateTime: 2022/2/11 19:12
--- 前方扇形范围判定
---@class bt_con_sector_forward
local bt_con_sector_forward = SimpleClassUtil:class(ICondition)
---@param skillData SkillData
function bt_con_sector_forward:initData(skillData)
   self._skillData = skillData
end
---@param blackBoard BlackBoard_BattleBase
function bt_con_sector_forward:doCondition(blackBoard,agent,dt)
    local result = Enum_BT.Node_ResultType.Fail
    if blackBoard._enmityIndex == 0 then
        result = Enum_BT.Node_ResultType.Fail
    else
        if self._skillData then
            local rangerParams = self._skillData._skillCon.range or {}
            local attack_angle = rangerParams[1] or 0
            local attack_r = rangerParams[2] or 0
            local vec2_a = Vector2( blackBoard._position.x ,blackBoard._position.z)
            local vec2_u = blackBoard._orientation == Enum_Battle.Orientation.Right and Vector2.right or Vector2.left

            --- @type BattleEntityContext
            local _entityContext = agent._entityContext
            --- @type BattleCharacter[]
            local _enemyEntity_list = _entityContext:getEnemyEntityList(blackBoard._campType)
            for i, _enemyEntity in pairs(_enemyEntity_list) do
                if _enemyEntity  and _enemyEntity:getData()._alive == true and  _enemyEntity:getData()._isCanBeSelected == true then
                    local volume_r = blackBoard._isCloseIn and _enemyEntity:getData()._volume_r or 0
                    local self_pos = blackBoard._position
                    local target_pos =  _enemyEntity:getData()._position
                    local dis = Vector3.Distance(self_pos,target_pos)
                    if dis <= attack_r then
                        local vec2_c = Vector2(target_pos.x ,target_pos.z)
                        if BattleMathUtils.IsSectorDiskIntersect(vec2_a,vec2_u,attack_angle,attack_r,vec2_c,volume_r) then
                            result = Enum_BT.Node_ResultType.Success
                            break
                        end
                    end
                end
            end
        end
    end
    return result
end

return bt_con_sector_forward