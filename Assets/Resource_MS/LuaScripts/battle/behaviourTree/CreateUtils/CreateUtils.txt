---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liuyubao.
--- DateTime: 2021/12/9 17:14
---@class CreateUtils
local CreateUtils = {}

function CreateUtils:isLeafNode(type)
    --local node = btApplyMap:getClass(nodeValue._identificationName)
    --if node == nil then
    --    Logger.Error("节点实例化失败 ！！！  nodeValue == ",nodeValue)
    --    return nil
    --end
    return type == Enum_BT.Node_Type.Action or type == Enum_BT.Node_Type.Condition
end
---@return NodeBase
function CreateUtils:getNode(nodeValue)
    if nodeValue and nodeValue._type then
        if nodeValue._type == Enum_BT.Node_Type.Select then
            return NodeSelect:new()
        elseif nodeValue._type == Enum_BT.Node_Type.Sequence then
            return NodeSequence:new()
        elseif nodeValue._type == Enum_BT.Node_Type.Random then
            return NodeRandomSelect:new()
        elseif nodeValue._type == Enum_BT.Node_Type.Random_Sequence then
            return NodeRandomSequence:new()
        elseif nodeValue._type == Enum_BT.Node_Type.Random_Priority then
            return NodeRandomPriority:new()
        elseif nodeValue._type == Enum_BT.Node_Type.Parallel then
            return NodeParallel:new()
        elseif nodeValue._type == Enum_BT.Node_Type.Parallel_Select then
            return NodeParallelSelect:new()
        elseif nodeValue._type == Enum_BT.Node_Type.Parallel_All then
            return NodeParallelAll:new()
        elseif nodeValue._type == Enum_BT.Node_Type.IF_Judge then
            return NodeIfJudge:new()
        elseif nodeValue._type == Enum_BT.Node_Type.Decorator_Inverter then
            return NodeDecoratorInverter:new()
        elseif nodeValue._type == Enum_BT.Node_Type.Decorator_Repeat then
            return NodeDecoratorRepeat:new()
        elseif nodeValue._type == Enum_BT.Node_Type.Decorator_Return_Fail then
            return NodeDecoratorReturnFail:new()
        elseif nodeValue._type == Enum_BT.Node_Type.Decorator_Return_Success then
            return NodeDecoratorReturnSuccess:new()
        elseif nodeValue._type == Enum_BT.Node_Type.Decorator_Until_Fail then
            return NodeDecoratorUntilFail:new()
        elseif nodeValue._type == Enum_BT.Node_Type.Decorator_Until_Success then
            return NodeDecoratorUntilSuccess:new()
        elseif nodeValue._type == Enum_BT.Node_Type.Condition then
            return NodeCondition:new()
        elseif nodeValue._type == Enum_BT.Node_Type.Action then
            return NodeAction:new()
        elseif nodeValue._type == Enum_BT.Node_Type.Sub_Tree then
            return NodeSubTree:new()
        else
            Logger.Error("未处理类型！！！！  ： " , tostring(nodeValue._type))
        end
    else
        Logger.Error("数据不合法 ！！！！  ： " , tostring(nodeValue._type))
    end
end

---@return NodeBase
function CreateUtils:getNodeByType(type)
    return self:getNode({_type = type})
end

function CreateUtils:getICondition()

end

function CreateUtils:getIAction()

end
---@return BlackBoard
function CreateUtils:createBlackBoard(heroId,sceneData,cultivateData)
    local blackBoard = BlackBoard:new()
    blackBoard._heroId = heroId
    blackBoard._sceneData = sceneData
    --blackBoard._index = sceneData.index
    --blackBoard._position = sceneData.position
    --blackBoard._skeleton_head = sceneData.skeleton_head
    --blackBoard._skeleton_bosom = sceneData.skeleton_bosom
    --blackBoard._skeleton_root = sceneData.skeleton_root

    blackBoard._cultivateData = cultivateData
    return blackBoard
end

function CreateUtils:createTree(heroId,sceneData,data)
    local blackBoard = self:createBlackBoard(heroId,sceneData,data)
    ---@type NodeIfJudge
    local root = self:getNodeByType(Enum_BT.Node_Type.IF_Judge)
    -------------------------------------------------------------------------------
          ---@type NodeCondition
          local node_1 = self:getNodeByType(Enum_BT.Node_Type.Condition)
          local condition_1 = btApplyMap:getClass("bt_con_compare_base")
          condition_1:initData({ _compareType = Enum_BT.CompareType.BT_BOOL, _key = "_alive", _compareTargetValue = true, })
          node_1:setICondition(condition_1)
    root:addNode(node_1)
    ---------------------------------------------------------------------------------
          ---@type NodeParallelAll
          local node_2 = self:getNodeByType(Enum_BT.Node_Type.Parallel_All)
                -- todo 先添加 被动技能
                local node_2_2 = self:getNodeByType(Enum_BT.Node_Type.IF_Judge)
          node_2:addNode(node_2_2)
    root:addNode(node_2)
    ---------------------------------------------------------------------------------
          ---@type NodeAction
          local node_3 = self:getNodeByType(Enum_BT.Node_Type.Action)
          local action_3 = btApplyMap:getClass("bt_ac_died")
          node_3:setIAction(action_3)
    root:addNode(node_3)
    --------------
    return  root
end






return CreateUtils