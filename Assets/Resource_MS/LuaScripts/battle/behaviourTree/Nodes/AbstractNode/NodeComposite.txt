---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lyb.
--- DateTime: 2021/12/7 23:45
--- 组合节点
---
--local NodeBase =  require_path("NodeBase","battle/behaviourTree/Nodes/AbstractNode/NodeBase")
---@class NodeComposite : NodeBase
local NodeComposite = SimpleClassUtil:class(NodeBase)

function NodeComposite:initialize(nodeType)
    NodeBase:initialize(self)
    ---@type NodeBase[]
    self._list_nodeChild = {}
    self:setNodeType(nodeType)
end
---@param node NodeBase
function NodeComposite:addNode(node)
    local count = #self._list_nodeChild
    count = count + 1
    node:setNodeIndex(count)
    self._list_nodeChild[count] = node
    --table.insert(self._list_nodeChild,node)
end
---@return NodeBase[]
function NodeComposite:getChildes()
   return self._list_nodeChild
end
---@return NodeBase
function NodeComposite:getChildesByIndex(index)
    if index == nil then
        BattleLog.error("index == nil")
    end
    index = index or 1
    return self._list_nodeChild[index]
end
---@return number
function NodeComposite:getChildesCount()
    return #self._list_nodeChild or 0
end
function NodeComposite:execute(blackboard,agent,dt)
    return Enum_BT.Node_ResultType.Fail
end

return NodeComposite