---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lyb.
--- DateTime: 2021/12/8 1:02
---  修饰节点_返回 固定结果
--local NodeDecorator =  require_path("NodeDecorator","battle/behaviourTree/Nodes/Composite/NodeDecorator")
---@class NodeDecoratorReturnConst : NodeDecorator
local NodeDecoratorReturnConst = SimpleClassUtil:class(NodeDecorator)

function NodeDecoratorReturnConst:initialize(resultType)
    NodeDecorator.initialize(self,resultType)
    self._constResult = Enum_BT.Node_ResultType.Fail
    self._runningNode = 0

end

function NodeDecoratorReturnConst:onEnter()
    NodeDecorator.onEnter(self)
end

function NodeDecoratorReturnConst:onExit()
    NodeDecorator.onExit(self)
    for i = 1, self:getChildesCount() do
        local value = 1 << i
        if (self._runningNode & value) > 0 then
            local node = self:getChildesByIndex(i)
            node:postPosition(Enum_BT.Node_ResultType.Fail)
        end
    end
end

function NodeDecoratorReturnConst:execute(blackboard,agent,dt)
    self:log_enter("NodeDecoratorReturnConst    Entity: ",self:getEntityId())
    local resultType = Enum_BT.Node_ResultType.Fail
    local count = #self:getChildes()
    for i = 1, count do
        local nodeBase = self:getChildesByIndex(i)

        nodeBase:prePosition()
        resultType = nodeBase:execute(blackboard,agent,dt)
        nodeBase:postPosition(resultType)

        if resultType == Enum_BT.Node_ResultType.Running then
            self._runningNode =  self._runningNode | (1 << i)
        end
    end
    self:log("NodeDecoratorReturnConst    Entity: ",self:getEntityId(),    "  resultType :", resultType)
    return resultType
end

function NodeDecoratorReturnConst:setConstResult(resultType)
   self._constResult = resultType
end

function NodeDecoratorReturnConst:upDate()

end

return NodeDecoratorReturnConst