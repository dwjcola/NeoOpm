---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lyb.
--- DateTime: 2021/12/8 1:02
---  修饰节点：一直执行节点，直到达到条件
---@class NodeDecoratorUntil : NodeDecorator
local NodeDecoratorUntil = SimpleClassUtil:class(NodeDecorator)

function NodeDecoratorUntil:initialize(resultType)
    self.super:initialize(resultType)
    self._desiredResult = Enum_BT.Node_ResultType.Fail
    self._runningNode = 0

end

function NodeDecoratorUntil:onEnter()
    self.super:onEnter()
    self._runningNode = 0
end

function NodeDecoratorUntil:onExit()
    self.super:onExit()
    for i = 1, self:getChildesCount() do
        local value = 1 << i
        if (self._runningNode & value) > 0 then
            local node = self:getChildesByIndex(i)
            node:postPosition(Enum_BT.Node_ResultType.Fail)
        end
    end
end

function NodeDecoratorUntil:execute()
    local resultType = Enum_BT.Node_ResultType.Fail
    local count = #self:getChildes()
    for i = 1, count do
        local nodeBase = self:getChildesByIndex(i)

        nodeBase:prePosition()
        resultType = nodeBase:execute()
        nodeBase:postPosition(resultType)

        if resultType == Enum_BT.Node_ResultType.Running then
            self._runningNode =  self._runningNode | (1 << i)
        end

        if resultType == self._desiredResult then
            return Enum_BT.Node_ResultType.Success
        end
    end

    return Enum_BT.Node_ResultType.Running
end

function NodeDecoratorUntil:setDesiredResult(resultType)
    self._desiredResult = resultType
end


return NodeDecoratorUntil