---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lyb.
--- DateTime: 2021/12/8 1:02
--- 并行节点(组合节点)
---  有一个Fail 即可停止
---并行节点：依次从头顺次遍历执行所有子节点
---       当前执行节点返回 Fail，退出停止，向父节点  返回 Fail
---       当前执行节点返回 Success，记录当前节点，继续 执行下一个节点，记录所有返回 Success 的节点
---       当前执行节点返回 Running, 记录当前节点，继续 执行下一个节点，记录所有返回 Running 的节点
---       如果没有节点  返回 Fail，
---       如果所有节点都返回 Success 向父节点返回 Success 否则向父节点返回 Running
---
--local NodeComposite = require_path("NodeComposite","battle/behaviourTree/Nodes/AbstractNode/NodeComposite")
---@class NodeParallel : NodeComposite
local NodeParallel = SimpleClassUtil:class(NodeComposite)

function NodeParallel:initialize()
    NodeComposite.initialize(self,Enum_BT.Node_Type.Parallel)
    self._runningNode = 0
end

function NodeParallel:onEnter()
    NodeComposite.onEnter(self)
    self._runningNode = 0
end

function NodeParallel:onExit()
    NodeComposite.onExit(self)
    for index, nodeChild in ipairs(self:getChildes()) do
        local value =  1 << index
        if (self._runningNode & value) > 0 then
            nodeChild:postPosition(Enum_BT.Node_ResultType.Fail)
        end
    end
end

function NodeParallel:execute(blackboard,agent,dt)
    self:log_enter("NodeParallel    Entity: ",self:getEntityId())
    local resultType = Enum_BT.Node_ResultType.Fail
    local successCount = 0
    local list_childes = self:getChildes() or {}
    for index, nodeChild in ipairs(list_childes) do
        nodeChild:prePosition()
        resultType = nodeChild:execute(blackboard,agent,dt)
        nodeChild:postPosition(resultType)
        if resultType == Enum_BT.Node_ResultType.Fail then
            break
        end
        if resultType == Enum_BT.Node_ResultType.Success then
            successCount = successCount + 1
        else
            self._runningNode  = self._runningNode | (1 << index)
        end
    end

    if resultType ~= Enum_BT.Node_ResultType.Fail then
        resultType = (successCount >= #list_childes) and Enum_BT.Node_ResultType.Success or Enum_BT.Node_ResultType.Running
    end
    self:log("NodeParallel   Entity: ",self:getEntityId(),    "  resultType :", resultType)
    return resultType
end
return NodeParallel