---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lyb.
--- DateTime: 2021/12/8 1:02
--- 并行选择节点(组合节点)
--- 有一个 Success 即可停止
---并行节点：依次从头顺次遍历执行所有子节点
---      当前执行节点返回 Success，退出停止，向父节点返回 Success
---       当前执行节点返回 Running, 记录当前节点，继续执行下一个节点，记录所有返回 Running 的节点
---       当前执行节点返回 Fail，继续执行下一个节点
---      如果没有节点返回 Success，  Running 的节点数大于 0 向父节点返回 Running 否则向父节点返回 Fail

---@class NodeParallelSelect : NodeComposite
local NodeParallelSelect = SimpleClassUtil:class(NodeComposite)

function NodeParallelSelect:initialize()
    self.super:initialize(Enum_BT.Node_Type.Parallel_Select)

    self._runningNode = 0

end

function NodeParallelSelect:onEnter()
    self.super:onEnter()
    self._runningNode = 0
end

function NodeParallelSelect:onExit()
    self.super:onExit()
    for index, nodeChild in ipairs(self:getChildes()) do
        local value =  1 << index
        if (self._runningNode & value) > 0 then
            nodeChild:postPosition(Enum_BT.Node_ResultType.Fail)
        end
    end
end

function NodeParallelSelect:execute(blackboard,contextManager)
    local resultType = Enum_BT.Node_ResultType.Fail
    local failCount = 0
    local list_childes = self:getChildes() or {}
    for index, nodeChild in ipairs(list_childes) do
        nodeChild:prePosition()
        resultType = nodeChild:execute(blackboard,contextManager)
        nodeChild:postPosition(resultType)
        if resultType == Enum_BT.Node_ResultType.Success then
            break
        end
        if resultType == Enum_BT.Node_ResultType.Fail then
            failCount = failCount + 1
        else
            self._runningNode  = self._runningNode | (1 << index)
        end
    end

    if resultType ~= Enum_BT.Node_ResultType.Success then
        resultType = (failCount >= #list_childes) and Enum_BT.Node_ResultType.Fail or Enum_BT.Node_ResultType.Running
    end
    self:log("NodeParallelSelect    Entity: ",self:getEntityId(),    "  resultType :", resultType)
    return resultType
end
return NodeParallelSelect