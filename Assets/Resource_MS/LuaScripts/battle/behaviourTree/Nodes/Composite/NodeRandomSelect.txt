---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lyb.
--- DateTime: 2021/12/8 1:02
---  随机选择节点(组合节点) (与权重随机节点差别 就是 没有权重)
---      选出一个（没有权重） 能 success 得执行 没有 就 继续随机 直到 有一个成功 或者 都失败
---      每次随机一个未执行的节点 总随机次数为子节点个数
---      当前执行节点返回 Success，退出停止 向父节点返回 Success
---      当前执行节点返回 Fail，退出当前节点 继续随机一个未执行的节点开始执行
---      当前执行节点返回 Running, 记录当前节点向父节点返回 Running 下次执行直接从该节点开始
---      如果所有节点都返回Fail，执行完所有节点后  向父节点返回 Fail


---@class NodeRandomSelect : NodeRandom
local NodeRandomSelect = SimpleClassUtil:class(NodeRandom)

function NodeRandomSelect:initialize()
    self.super:initialize(Enum_BT.Node_Type.Random)
    ---@type NodeBase
    self._lastRunningNode = nil
end

function NodeRandomSelect:onEnter()
    self.super:onEnter()
end

function NodeRandomSelect:onExit()
    self.super:onExit()
    if self._lastRunningNode then
        self._lastRunningNode:postPosition(Enum_BT.Node_ResultType.Fail)
        self._lastRunningNode = nil
    end
end


function NodeRandomSelect:execute(blackboard,contextManager)
    self:log_enter("NodeRandomSelect    Entity: ",self:getEntityId())
    local index = 0
    if self._lastRunningNode then
        index = self._lastRunningNode:getNodeIndex()
    end
    self._lastRunningNode = nil
    local resultType = Enum_BT.Node_ResultType.Fail
    local count = #self:getChildes()
    for i = 1, count do
        if index <= 0 then
            index = self:getRandom()
        end
        local nodeBase = self:getChildes()[index]
        index = 0

        nodeBase:prePosition()
        resultType = nodeBase:execute(blackboard,contextManager)
        nodeBase:postPosition(resultType)

        if resultType == Enum_BT.Node_ResultType.Fail then
            -- nothing to do
        elseif resultType == Enum_BT.Node_ResultType.Success then
            break
        else
            self._lastRunningNode = nodeBase
            break
        end
    end
    self:log("NodeRandomSelect   Entity: ",self:getEntityId(),    "  resultType :", resultType)
    return resultType
end


return NodeRandomSelect