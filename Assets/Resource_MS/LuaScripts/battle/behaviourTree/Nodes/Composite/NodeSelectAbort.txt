---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lyb.
--- DateTime: 2021/12/8 1:02
---  选择节点 打断 (组合节点)
---      选择节点：依次从头顺次遍历执行所有子节点 直到 返回 Success 或者 所有节点都失败
---      当前执行节点返回 Success，退出停止，向父节点
---      当前执行节点返回 Fail，退出当前节点继续执行下一个节点
---      当前执行节点返回 Running, 记录当前节点，向父节点返回 Running，下次执行直接从该节点开始
---      如果所有节点都返回Fail，执行完所有节点后向父节点返回 Fail
--- 注意哈 这里 得子节点 第一个节点 需要是条件节点  这里相当于是 做了 ifelse
--local NodeComposite = require_path("NodeComposite","battle/behaviourTree/Nodes/AbstractNode/NodeComposite")
---@class NodeSelectAbort : NodeComposite
local NodeSelectAbort = SimpleClassUtil:class(NodeComposite)

function NodeSelectAbort:initialize()
    NodeComposite.initialize(self,Enum_BT.Node_Type.SelectAbort)
    ---@type NodeBase
    self._lastRunningNode = nil
end

function NodeSelectAbort:onEnter()
    NodeComposite.onEnter(self)
end

function NodeSelectAbort:onExit()
    NodeComposite.onExit(self)
    if self._lastRunningNode then
        self._lastRunningNode:postPosition(Enum_BT.Node_ResultType.Fail)
        self._lastRunningNode = nil
    end
end


function NodeSelectAbort:execute(blackboard,agent,dt)
    self:log_enter("NodeSelectAbort    Entity: ",self:getEntityId())
    local index = #self:getChildes() + 1
    if self._lastRunningNode then
        index = self._lastRunningNode:getNodeIndex()
    end
    --self._lastRunningNode = nil
    local resultType = Enum_BT.Node_ResultType.Fail

    local count = #self:getChildes()
    count = count < index and count or index
    for i = 1, count do
        local nodeBase = self:getChildesByIndex(i)

        nodeBase:prePosition()
        resultType = nodeBase:execute(blackboard,agent,dt)
        nodeBase:postPosition(resultType)

        if resultType == Enum_BT.Node_ResultType.Fail then
            -- nothing to do
        elseif resultType == Enum_BT.Node_ResultType.Success then
            if i < index then
                if self._lastRunningNode then
                    self._lastRunningNode:postPosition(Enum_BT.Node_ResultType.Fail)
                    self._lastRunningNode = nil
                end
            end
            break
        else
            if i < index then
                if self._lastRunningNode then
                    self._lastRunningNode:postPosition(Enum_BT.Node_ResultType.Fail)
                    self._lastRunningNode = nil
                end
                self._lastRunningNode = nodeBase
                break
            end
        end
    end
    self:log("NodeSelectAbort   Entity: ",self:getEntityId(),    "  resultType :", resultType)
    return resultType
end


return NodeSelectAbort