---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lyb.
--- DateTime: 2021/12/8 0:03
--- 条件节点(叶节点)
--local NodeLeaf = require_path("NodeLeaf","battle/behaviourTree/Nodes/AbstractNode/NodeLeaf")
---@class NodeCondition : NodeLeaf
local NodeCondition = SimpleClassUtil:class(NodeLeaf)

function NodeCondition:initialize()
    NodeLeaf.initialize(self,Enum_BT.Node_Type.Condition)
    ---@type ICondition 因为lua 无法定义 接口 所以带
    ---有 condition 方法得 表 就认为是 ICondition
    self._iCondition = nil
    self._list_parameterList = {}
    self._list_conditionGroup = {}
    self:setICondition(self)
end

function NodeCondition:setICondition(iCondition)
    self._iCondition = iCondition
end

function NodeCondition:execute(blackBoard,agent,dt)
    self:log_enter("NodeCondition    Entity: ",self:getEntityId())
    local resultType = Enum_BT.Node_ResultType.Fail
    if self._iCondition then
        resultType = self._iCondition:doCondition(blackBoard,agent,dt)
    end
    self:log("NodeCondition   Entity: ",self:getEntityId(),    "  resultType :", resultType)
    return resultType
end

function NodeCondition:doCondition(blackBoard,battleManager)
    return Enum_BT.Node_ResultType.Fail
end

function NodeCondition:setParameterList(list_parameterList)

    self._list_parameterList = list_parameterList or {}
end


function NodeCondition:onExit()
    if self._iCondition and self._iCondition.onExit then
        self._iCondition:onExit()
    end
end

return NodeCondition