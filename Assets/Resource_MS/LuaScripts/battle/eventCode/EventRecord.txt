---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liuyubao.
--- DateTime: 2021/12/17 14:18
---事件类。缓存记录事件。

---@class EventRecord @事件类
local EventRecord = SimpleClassUtil:class()

---@param eventManager EventManager
function EventRecord:initialize(eventManager)
    self._eventManager = eventManager

    ---@type table<EventType, function[]> | table
    self._records = {}
end

-- 清除事件
function EventRecord:ClearEvent()
    for k, v in pairs(self._records) do
        for i = 1, #v do
            self._eventManager:RemoveListener(k, v[i])
        end
    end
    self._records = {}
end

-- 触发事件
---@param event EventType
function EventRecord:Dispatch(event, ...)
    self._eventManager:Dispatch(event, ...)
end

-- 添加事件
---@param event EventType
---@param func fun(listener:table, ...) | fun(...)
---@param listener any
function EventRecord:AddEvent(event, func, listener)
    self._records[event] = self._records[event] or {}
    for i = 1, #self._records[event] do
        if func == self._records[event][i] then
            return
        end
    end
    local key = self._eventManager:AddListener(event, func, listener)
    self._records[event][#self._records[event] + 1] = key
end

-- 删除事件
---@param event EventType
---@param key function | table | any
function EventRecord:RemoveEvent(event, key)
    if self._records[event] then
        ---@type table<number, function>
        local funcArray = self._records[event]
        for i = 1, #funcArray do
            if key == funcArray[i] then
                table.remove(funcArray, i)
                break
            end
        end
    end
    self._eventManager:RemoveListener(event, key)
end

return EventRecord
