---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liuyubao.
--- DateTime: 2021/12/6 18:06
---
---@class BattleLoader:MiddleClass
local BattleLoader = Class("BattleLoader")

function BattleLoader:initialize(data)
    self._data = data

    self._list_left_root = {}
    self._list_right_root = {}

    self._list_left_ski = {}
    self._list_right_ski = {}


    self._loadCount_model = 0


    if data == nil  then
        Logger.Error("data  ==  nil")
    end
end

function BattleLoader:proLoad(loadFinish)
    self.loadFinish = loadFinish

    self:loadScene()
    self:loadPlayerRoot()

    self:loadEff()
end

function BattleLoader:loadScene()
    LC.LoadBattleScene("scene_root_test",self,self.sceneLoadSuccess)
end

function BattleLoader:sceneLoadSuccess(gameObject)
    self._go_scene = gameObject
end

function BattleLoader:loadPlayerRoot()
    LC.LoadBattleScene("playerRoot",self,self.playerRootLoadSuccess)
end

function BattleLoader:playerRootLoadSuccess(gameObject)
    self._go_playerRoot = gameObject
    self:initRootMap()
    self:loadModel()
end

function BattleLoader:initRootMap()
    self._go_left =  self._go_playerRoot.transform:Find("leftRoot").gameObject
    for i = 1, 9 do
       self._list_left_root[i] =  self._go_left.transform:Find(tostring(i)).gameObject
    end
    self._go_right =  self._go_playerRoot.transform:Find("rightRoot").gameObject
    for i = 1, 9 do
        self._list_right_root[i] =  self._go_right.transform:Find(tostring(i)).gameObject
    end
end


function BattleLoader:loadModel()

    for i = 1, 9 do
        LC.LoadSpineAnimation("hero_101", self._list_left_root[i].transform,function(l,skeletonAnimation)
            local index = i
            self:modelLoadSuccess_left(index,skeletonAnimation)
            self:isLoadEnd_Model(index)
        end,self)
    end

    for i = 1, 9 do
        LC.LoadSpineAnimation("hero_101", self._list_right_root[i].transform,function(l,skeletonAnimation)
            local index = i
            self:modelLoadSuccess_right(index,skeletonAnimation)
            self:isLoadEnd_Model(index)
        end,self)
    end

end

function BattleLoader:modelLoadSuccess_left(index,skeletonAnimation)
    self._list_left_ski[index] = skeletonAnimation
    --local offset = BattleUtils:getHeroInitOffsetPos("",true)
    --skeletonAnimation.gameObject.transform.localPosition = Vector3(offset[1],offset[2],offset[3])
end

function BattleLoader:modelLoadSuccess_right(index,skeletonAnimation)
    self._list_right_ski[index] = skeletonAnimation
    --local offset = BattleUtils:getHeroInitOffsetPos("",false)
    --skeletonAnimation.gameObject.transform.localPosition = Vector3(offset[1],offset[2],offset[3])
end

function BattleLoader:isLoadEnd_Model(index)
    self._loadCount_model =  self._loadCount_model + 1
    if  self._loadCount_model == 18 then
        if  self.loadFinish then
            self.loadFinish()
        end
    end
end

function BattleLoader:loadEff()

end

return BattleLoader