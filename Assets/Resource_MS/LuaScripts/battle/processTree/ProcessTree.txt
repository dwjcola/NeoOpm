---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liuyubao.
--- DateTime: 2021/12/20 14:16
---@class ProcessTree
local ProcessTree = SimpleClassUtil:class()

function ProcessTree:initialize(data)
    ---@type ProcessNodeBase[]
    self._list_node = {}
    ---@type number
    self._doIndex = 1

    self._endDelegate = nil
    ---@type BlackBoard
    self._blackBoard = BlackBoard:new()
end
---@type ProcessNodeBase
function ProcessTree:addNode(node)
    if node then
        table.insert( self._list_node,node)
    end
end

function ProcessTree:getNode(index)
    return self._list_node[index]
end

function ProcessTree:setDelegate(delegate)
    self._endDelegate = delegate
end

function ProcessTree:start()
    self._doIndex = 1
    local node = self:getNode(self._doIndex)
    if node  then
        self:doNode(node)
    end
end
---@param node ProcessNodeBase
function ProcessTree:doNode(node)
    if node then
        node:onEnter()
    end
end

function ProcessTree:onEnd()
    if self._doIndex and self:getNode(self._doIndex) then
        self:getNode(self._doIndex):onExit()
    end
    if self._endDelegate then
        self._endDelegate()
    end
end
---@param node ProcessNodeBase
function ProcessTree:onNext(node)
    self._doIndex = node:getIndex() + 1
    local nextNode = self:getNode(self._doIndex)
    if nextNode  then
        self:doNode(nextNode)
    else
        self:onEnd()
    end
end

function ProcessTree:exit()
    if self._doIndex and self:getNode(self._doIndex) then
        self:getNode(self._doIndex):onExit()
    end
    self:clear()
end

function ProcessTree:clear()
    self._list_node = nil
    self._doIndex = 1
    self._blackBoard = nil
    self._endDelegate = nil
end
return ProcessTree