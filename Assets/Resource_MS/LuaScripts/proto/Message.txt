syntax = "proto3";
enum RpcReturnCode {
    BEGIN=0;
    UPDATEBLOCKLOCTION_SUCCESS=10;
    BLOCKOPERATE_IDCANNOTUSE=-11;
    BLOCKSOPERATE_ARGNOTARRAY=-12;
    BLOCKOPERATE_ARGLACK=-13;
    BLOCKOPERATE_POSERR=-14;
    BLOCKOPERATE_NOTINBAG=-15;
    BLOCKOPERATE_NOBLOCK=-16;
    BLOCKOPERATE_WITHDRAWFUNCBUILD=-17;
    PLAYER_ALLBUILDING__ERR=-141;
    PLAYER_SINGLEBUILDING_ERR=-142;
    PLAYER_BUILDING_NOTIDLE=-143;
    BUILDINGFUNCTION_IDERR=-144;
    BUILDINGQUEUE_TYPE_ERR=-145;
    RAPIDFINISH_CONSUME_LACK=-146;
    BUILDING_NOQUEUE=-147;
    BUILD_HAS_PRODUCT=-148;
    NEWBUILD_CONSUME_LACKRES=-149;
    NEWBUILD_CONSUME_LACKITEM=-151;
    BUILDING_ARGERR=-152;
    NEWBUILD_SUCCESS=150;
    DORESEARCH_SUCCESS=70;
    DORESEARCH_TECHID_ERR=-71;
    DORESEARCH_LEVELMAX=-72;
    DORESEARCH_PRETECH_NEED=-73;
    DORESEARCH_TECHBUILDLVL_NEED=-74;
    DORESEARCH_CONSUMELACK=-75;
    PUBRECRUIT_SUCCESS=80;
    PUBRECRUIT_CFGDATA_ERR=-81;
    PUBRECRUIT_FREE_MULTITIMES=-82;
    PUBRECRUIT_COMMON_FREE_USEUP=-83;
    PUBRECRUIT_COMMON_FREE_INCD=-84;
    PUBRECRUIT_GAIN_EMPTY=-85;
    PUBRECRUIT_HIGH_FREE_USEUP=-86;
    PUBRECRUIT_CONSUME_LACK=-87;
    SETNOTSHOWFLAG_SUCCESS=90;
    ACCELERATEQUEUE_SUCCESS=100;
    CANCELQUEUE_SUCCESS=101;
    ACCELERATE_TIME_ERR=-101;
    GET_QUEUE_ERR=-102;
    ACCELERATE_ITEMID_ERR=-103;
    ACCELERATE_ITEM_QUEUETYPE_ERR=-104;
    ACCELERATE_CONSUME_LACK=-105;
    ACCELERATE_BUY_ITEM_FAIL=-106;
    TRAINSOLDIER_SUCCESS=160;
    TRAINSOLDIER_ARGERR=-161;
    TRAINSOLDIER_CFGERR=-162;
    TRAINSOLDIER_TYPENOTMATCH=-163;
    TRAINSOLDIER_NUMOVERMAX=-164;
    TRAINSOLDIER_TECHNEED=-165;
    TRAINSOLDIER_CONSUMELACK=-166;
    BUILDLEVELUP_SUCCESS=170;
    BUILDLEVELUP_LEVELMAX=-171;
    BUILDLEVELUP_PREBUILDLVLNEED=-172;
    BUILDLEVELUP_ITEMLACK=-173;
    BUILDLEVELUP_RESLACK=-174;
    BUILDLEVELUP_QUEUENUMLIMIT=-175;
    TREATWOUNDED_SUCCESS=190;
    TREATWOUNDED_CONSUMELACK=-191;
    CHAT_PLAYERCHANNELS_ERR=-211;
    CHAT_SINGLECHANNEL_ERR=-212;
    CHAT_PLAYER_NOTINCHANNEL=-213;
    CHAT_GROUPNOTFIND=-214;
    CHAT_PLAYERNOTINGROUP=-215;
    CHAT_PLAYERINGROUP=-216;
    CHAT_DELBEFORECLEAR=-217;
    CHAT_OPAUTHORITYNEED=-218;
    CHAT_FRIENDSHIPNEED=-219;
    CHAT_PLAYERDBINFO_ERR=-220;
    CHAT_AIMPLAYERIDINVALID=-231;
    CHAT_AIMPLAYERNOTINGROUP=-232;
    CHAT_AIMPLAYERNOTINCHANNEL=-233;
    CHATENTRY_SUCCESS=220;
    CHATENTRY_MAINLVLNEED=-222;
    CHATENTRY_INCD=-223;
    CHATENTRY_MSGLENOVERMAX=-224;
    CHATENTRY_PRIVATEBLOCKED=-225;
    CREATEGROUP_POSITIONNEED=-241;
    CREATEGROUP_GROUPNUMMAX=-242;
    CREATEGROUP_SELFMANAGENUMMAX=-243;
    CREATEGROUP_VOLUMEMAX=-244;
    CREATEGROUP_VOLUMEMIN=-245;
    OPGROUP_SUCCESS=250;
    OPGROUP_DISIMISSDONE=251;
    OPGROUP_JOINDONE=252;
    OPGROUP_EXITDONE=253;
    OPGROUP_NEEDCONFIRMEXIT=254;
    OPGROUP_INVALIDOPTYPE=-251;
    OPGROUP_CANNOTJOIN=-252;
    OPGROUP_CANNOTKICK=-253;
    OPGROUP_MODIFYGNAMEDONE=255;
    OPGROUP_SENSITIVEWORDS=-254;
    CHAT_SETFLAG_SUCCESS=270;
    CHAT_SETPLAYERFLAG_SUCCESS=280;
    CHAT_READNEWMSG_SUCCESS=290;
    SETACTIVEMAINSKILL_SUCCESS=300;
    SETACTIVEMAINSKILL_POSINVALID=-301;
    SETACTIVEMAINSKILL_IDINVALID=-302;
    SETACTIVEMAINSKILL_LOCKED=-303;
    CLICKGETREWARD_SUCCESS=590;
    CLICKGETREWARD_CANNOT=-591;
    CLICKGETREWARD_NOTASK=-592;
    CLICKGETREWARD_PLAYERIDERR=-593;
    OPENACTIVEBOX_SUCCESS=600;
    OPENACTIVEBOX_PLAYERIDERR=-601;
    OPENACTIVEBOX_LACKPOINT=-602;
    OPENACTIVEBOX_OPENEDBEFORE=-603;
    OPENACTIVEBOX_BOXINFOERR=-604;
    TASK_OPSUCCESS=680;
    TASK_STATUSERR=-681;
    TASK_INFOERR=-682;
    PLAYERHEROES_DATA_ERR=-801;
    PLAYER_SINGLE_HERO_ERR=-802;
    PLAYER_HERO_ARGERR=-803;
    PLAYER_HERO_EXISTED=-804;
    PLAYER_EXISTHERO_CONVERT_DONE=800;
    PLAYER_GET_HERO_DONE=801;
    HERO_ADDEXP_EXPINVALID=-821;
    HERO_ADDEXP_LVLLIMIT=-822;
    HERO_ADDEXP_USEITEMFAIL=-823;
    HERO_ADDEXP_REACHLIMIT=820;
    HERO_ADDEXP_SUCCESS=821;
    HERO_INCSTAR_USEITEMFAIL=-831;
    HERO_INCSTAR_REACHLIMIT=-832;
    HERO_INCSTAR_SUCCESS=830;
    HERO_SETMAINFIGHT_SUCCESS=840;
    HERO_SETMAINFIGHT_ARGERR=-841;
    HERO_SKILLLEVELUP_SUCCESS=1060;
    HERO_SKILLLEVELUP_LOCKED=-1061;
    HERO_SKILLLEVELUP_ITEMLACK=-1062;
    HERO_SKILLLEVELUP_MAXLEVEL=-1063;
    HERO_SKILLLEVELUP_CFGERR=-1064;
    NEWBIEGUIDE_SUCCESS=1070;
    TURRET_RECOVERY_SUCCESS=1080;
    TURRET_COMPOSE_SUCCESS=1081;
    BUILDING_NOTTURRET=-1082;
    TURRET_COMPOSE_ARGERR=-1083;
    SAVE_BUILDING_SUCCESS=1091;
    SAVE_BUILDING_ARGERR=-1092;
    CHANGE_BUILDING_SUCCESS=1093;
    CHANGE_BUILDING_ARGERR=-1094;
    SET_EQUIP_SUCCESS=1101;
    SET_EQUIP_ARGERR=-1102;
}
enum CommonInfoChangeReason {
    CHANGEREASON_NONE=0;
    TRAIN_ADD_SOLDIER=1;
    STARTQUEUE_DEC_RES=2;
    RAPIDFINISHQUEUE_DEC_RES=3;
    ACCELERATEQUEUE_DEC_ITEM=4;
    CANCELQUEUE_INC_RES=5;
    BUILDROBBED_DEC_RES=6;
    BUILDPRODUCT_INC_RES=7;
    PUBRECRUIT_DEC_ITEM=8;
    PUBRECRUIT_GAIN_ITEM=9;
    STARTQUEUE_DEC_ITEM=10;
    TASK_ADD_ITEM=11;
    TASK_INC_RES=12;
    TREAT_FINISH_CHANGE_SOLDIER=13;
    GOLD_BUY_RESOURCE=14;
    ADD_HERO_EXP_DEC_ITEM=15;
    GM_ADD_SOLDIER=16;
    NEWBUILDING_DEC_RES=17;
    NEWBUILDING_DEC_ITEM=18;
    BUY_ITEM_DEC_RES=19;
    RES_BUY_INC_ITEM=20;
    CANCELQUEUE_INC_ITEM=21;
    INCHEROSTAGE_DEC_ITEM=22;
    INCHEROSKILLLEVEL_DEC_ITEM=23;
}
enum Attribute_Type_Top {
    TYPE_NONE=0;
    TYPE_BATTLE=1;
    TYPE_BUILD=2;
    TYPE_OTHER=3;
}
message Handshake {
    int32 ProtoVersion = 1;
}
message ReturnMsg {
    int32 Code = 1;
    uint64 Arg1 = 2;
}
message ServerId {
    int32 Code = 1;
    string Sid = 2;
}
message LoginRet {
    int32 Code = 1;
    uint64 Time = 2;
}
message UserLoginInfo {
    string Account = 1;
    string Pwd = 2;
}
message UserEnterInfo {
    string Account = 1;
    uint64 RoleId = 2;
    string Token = 3;
    string Sid = 4;
}
message AttackData {
    int32 TroopId = 1;
    int32 TargetId = 2;
}
message ChatInfo {
    string Contend = 1;
}
message KeyValuePair {
    int32 Key = 1;
    int32 Value = 2;
}
message SimpleMsg {
    int32 Param = 1;
}
message ULongId {
    uint64 Id = 1;
}
message ULongIdList {
    repeated uint64 Ids = 1;
}
message AttrInc {
    int32 AttrId = 1;
    int32 Value = 2;
}
message PlayerAttrsInc {
    uint64 PlayerId = 1;
    repeated AttrInc IncInfo = 2;
}
message PlayerBaseInfo {
    uint64 RoleId = 1;
    uint32 ServerId = 2;
    string AccId = 3;
    string RoleName = 4;
    uint32 Level = 5;
    int32 Food = 6;
    int32 Stone = 7;
    int32 Iron = 8;
    int32 Crystal = 9;
    int32 Gold = 10;
    int32 ActionToken = 11;
    PlayerCombatEffectInfo CombatEffect = 12;
    int32 Tradelevel = 13;
    int32 Tradegold = 14;
    int32 NearportId = 15;
    uint64 Summontime = 16;
    int32 Killmonsterlevel = 17;
    int32 Killoutpostlevel = 18;
    uint32 Tili = 19;
    uint32 Unionjob = 20;
    uint32 Uniontitle = 21;
}
enum ResourceType {
    UNKNOWNTYPE=0;
    FOOD=1;
    STONE=2;
    IRON=3;
    CRYSTAL=4;
    FREEGOLD=5;
    MONEYGOLD=6;
    GOLD=7;
    ACTIONTOKEN=8;
    TRADEGOLD=9;
}
message PlayerResource {
    ResourceType Ty = 1;
    int32 Cnt = 2;
}
message PlayerResourceInfo {
    repeated PlayerResource Res = 1;
}
enum SoldierStatus {
    INSIDE=0;
    OUTSIDE=1;
    HURT=2;
    DEAD=3;
    SERIOUSINJURY=4;
}
message PlayerHero {
    uint32 Id = 1;
    uint32 Status = 2;
}
message PlayerHeroInfo {
    repeated PlayerHero Hero = 1;
}
message HeroLevelInfo {
    int32 Id = 1;
    int32 Level = 2;
    uint64 Exp = 3;
    int32 Star = 4;
    int32 Stage = 5;
    uint32 Status = 6;
    repeated int32 SkillIds = 7;
}
message PlayerHeroesLevel {
    repeated HeroLevelInfo Heroes = 1;
}
message PlayerSoldier {
    uint32 Id = 1;
    uint32 Status = 2;
    uint32 Count = 3;
}
message PlayerSoldierInfo {
    repeated PlayerSoldier Soldier = 1;
}
message PlayerAllBarriers {
    uint64 PlayerId = 1;
    repeated OneBarriersGroupInfo BarriesGroups = 2;
}
message OneBarriersGroupInfo {
    int32 MapId = 1;
    int32 MainBarrier = 2;
    repeated KeyValuePair BranchBarriers = 3;
}
enum CombatEffectType {
    CETUNKNOWN=0;
    BUILD=1;
    TECH=2;
    HERO=3;
    SOLDIER=4;
}
message PlayerCombatEffect {
    CombatEffectType Ty = 1;
    uint64 Val = 2;
}
message PlayerCombatEffectInfo {
    repeated PlayerCombatEffect Ce = 1;
}
message CombatEffectChangeInfo {
    uint64 PlayerId = 1;
    PlayerCombatEffect NewData = 2;
}
message RepeatedInt32 {
    repeated int32 Num = 1;
}
enum BuildingAttribute {
    START=0;
    FOOD_YIELD=1;
    WOOD_YIELD=2;
    IRON_YIELD=3;
    SILVER_YIELD=4;
    FOOD_VOLUME=5;
    WOOD_VOLUME=6;
    IRON_VOLUME=7;
    SILVER_VOLUME=8;
    FOOD_PROTECT=9;
    WOOD_PROTECT=10;
    IRON_PROTECT=11;
    SILVER_PROTECT=12;
    HOSPITAL_VOLUME=13;
    LEVELUP_QUEUETIME=14;
    TRAIN_SOLDIER_QUEUETIME=15;
    RESEARCH_QUEUE_TIME=16;
}
message BuildAttrInfo {
    int32 BuildingId = 1;
    int32 AttrType = 2;
    repeated int32 IntVal = 3;
}
enum BuildingAttrIncType {
    ATTR_INC_NONE=0;
    FOOD_YIELD_PERC=302;
    WOOD_YIELD_PERC=303;
    IRON_YIELD_PERC=304;
    SILVER_YIELD_PERC=305;
    TRAIN_SPEED_PERC=301;
    RESEARCH_SPEED_PERC=306;
    LEVELUP_SPEED_PERC=307;
}
enum BuildAttrIncSourceType {
    INC_SOURCE_NONE=0;
    TECHNOLOGY=1;
    USE_ITEM=2;
    SELF_LEVELUP=3;
}
enum BuildAttrUpdateReason {
    UPDATEATTR_NONE=0;
    BUILDLEVEUP=1;
}
enum Queue_Type {
    NONE=0;
    BUILD=1;
    RESEARCH=2;
    TRAIN=3;
    TREAT=4;
    ALL=9;
}
message BuildingInfo {
    int32 BuildingId = 1;
    int32 BuildingTblId = 2;
    int32 Level = 3;
    int32 QueueType = 4;
    int64 FinishTime = 5;
    int32 Active = 6;
    repeated uint64 ProductArg = 7;
    repeated BuildAttrInfo Attrs = 8;
    int32 QueueTimeLen = 9;
}
message BlockInfo {
    int32 Id = 1;
    int32 Tid = 2;
    int32 X = 3;
    int32 Y = 4;
    int32 Level = 5;
}
message BuildingsInfo {
    repeated BuildingInfo Buildings = 1;
    repeated BlockInfo Blocks = 2;
    TechnologyInfo TechnologyLevels = 3;
    RecruitInfo RecruitInfo = 4;
    repeated int32 BagBlocksIds = 5;
    repeated int32 BagBlockNums = 6;
    repeated int32 WoundedInfo = 7;
    repeated PlayerAttrsInc AttrsIncInfo = 8;
    repeated int32 MainGunSkills = 9;
    repeated int32 ActiveSkills = 10;
    bagBlockItemList BagBlockItems = 11;
}
message BuildingsAllPlan {
    int32 CurId = 1;
    repeated BuildingPlan Plans = 2;
}
message BuildingPlanItem {
    int32 Tid = 1;
    int32 X = 2;
    int32 Y = 3;
    int32 Level = 4;
}
message BuildingPlan {
    int32 Id = 1;
    repeated BuildingPlanItem Plan = 2;
}
message ChangeSceneRes {
    repeated int32 DelIdList = 1;
    repeated BlockInfo ChangeBlocks = 2;
    repeated bagBlockItem ChangeBagItems = 3;
}
message LoginBuildingReq {
    int64 Uid = 1;
    string Sid = 2;
}
message TechnologyInfo {
    repeated KeyValuePair TechLevels = 1;
}
message RecruitOption {
    int32 RecruitType = 1;
    int32 Times = 2;
    int32 IsFree = 3;
}
message AccelerateInfo {
    int32 BuildingId = 1;
    repeated int32 ItemId = 2;
    repeated int32 ItemNum = 3;
    int32 Buy = 4;
}
message QueueInfo {
    int32 BuildingId = 1;
    int32 QType = 2;
    repeated int32 QueueArg = 3;
}
message RecruitInfo {
    int32 CommonFreeTimes = 1;
    int64 UseFreeTime = 2;
    int32 HasHighFree = 3;
    int64 GetNextHighFree = 4;
    int32 CommonNotShow = 5;
    int32 HighNotShow = 6;
}
message RecruitRes {
    repeated RecruitGain GainItems = 1;
    RecruitOption RecruitInfo = 2;
}
message RecruitGain {
    int32 TblType = 1;
    int32 TblId = 2;
    int32 GainNum = 3;
}
message TrainInfo {
    int32 SoldierId = 1;
    int32 TrainNum = 2;
    int32 BuildingId = 3;
}
message ResourceInfo {
    int64 PlayerId = 1;
    int32 ResType = 2;
    int32 AddVal = 3;
}
message CommonChangeInfo {
    int64 PlayerId = 1;
    int32 TblId = 2;
    int32 AddVal = 3;
    int32 ChangeReason = 4;
    int32 ReasonParm = 5;
}
message GetProductResultAll {
    repeated GetProductResult GetInfo = 1;
}
message GetProductResult {
    int32 BuildingId = 1;
    repeated int32 ProductInfo = 2;
}
message BuildingAttrs {
    repeated BuildAttrInfo Attrs = 1;
}
message SoldiersInfo {
    int64 PlayerId = 1;
    repeated KeyValuePair Soldiers = 2;
}
message PlayerRequest {
    int64 PlayerId = 1;
    int32 ReqArg = 2;
}
message bagBlockItemList {
    repeated bagBlockItem BlockItem = 1;
}
message bagBlockItem {
    int32 BlockLevel = 1;
    int32 BlockType = 2;
    int32 BlockCount = 3;
}
message ComposeBackList {
    repeated bagBlockItem BlockItem = 1;
    int32 Code = 2;
}
message SendTurretRequest {
    int64 PlayerId = 1;
    bagBlockItem TurretItem = 2;
}
message GmGetNewTurret {
    int32 TurretId = 1;
    int32 TurretLevel = 2;
    int32 TurretCount = 3;
}
message ComposeInfo {
    int32 TurretType = 1;
    int32 ComposeMaxLvl = 2;
}
message ComposeTurretInfo {
    int32 BlockId1 = 1;
    int32 BlockId2 = 2;
}
enum OperationToBit {
    NONEOP=0;
    TOP=1;
    BLOCK=2;
    IGNORE=3;
    DELETE=4;
}
enum ChannelChangeType {
    CHANGE_NONE=0;
    JOIN_SELF=1;
    JOIN_INVITE=2;
    EXIT_SELF=3;
    EXIT_KICK=4;
    CREATE=5;
    DISMISS=6;
    UNION_MEMBER_JOB_CHANGE=7;
}
enum GroupOperationType {
    GROUP_OPSTART=0;
    SELF_EXIT=1;
    INVITE_JOIN=2;
    KICK=3;
    DISMISSGROUP=4;
    JOINGROUP_INIT=5;
    EXIT_AND_DISMISS=6;
    NOTIFY_ALL=7;
    MODIFY_GROUP_NAME=8;
}
enum GroupDismissReason {
    DISMISSREASON_START=0;
    MASTER_CHOOSE=1;
    MASTER_LACK=2;
    GROUP_EMPTY=3;
    NOT_ACTIVE_LONG=4;
    CHANNEL_REMOVE=5;
}
enum Chat_Info_Type {
    CHATINFOTYPE_BEGIN=0;
    P_COMMON=1;
    P_DYNAMIC=2;
    S_TIMESTAMP=3;
    S_GROUP_OP=4;
    S_CHANNEL_OP=5;
    P_NOTIFYALL=6;
}
message SingleChatInfo {
    ChannelKey CKey = 1;
    int32 GroupId = 2;
    string Content = 3;
    uint64 SenderId = 4;
    repeated uint64 AimId = 5;
    uint64 TimeStamp = 6;
    int32 InfoType = 7;
    string SenderName = 8;
    uint32 OpType = 9;
    repeated uint64 BlockIds = 10;
}
message ChatDatas {
    repeated SingleChatInfo Items = 1;
}
message ChatReturn {
    int32 Code = 1;
}
message ChatRequest {
    int32 ChannelType = 1;
    uint64 ChannelKey = 2;
    int32 GroupId = 3;
    int32 KeepChatsNum = 4;
    int32 ReqSize = 5;
}
message PlayerInfoForChat {
    uint64 PlayerId = 1;
    uint64 UnionId = 2;
    string FrontEnd = 3;
    int32 ServerId = 4;
    string Name = 5;
}
message BlockIdList {
    repeated Friend Friend = 1;
}
message PlayerChannelData {
    repeated SingleChannelData ChannelRecords = 1;
    ULongIdList AimIds = 2;
    repeated int32 Flags = 3;
}
message SingleChannelData {
    ChannelKey CKey = 1;
    int32 GroupId = 2;
    int32 NewMsgNum = 3;
    string LastContent = 4;
    int32 Flags = 5;
    string Name = 6;
    uint64 TimeStamp = 7;
    SingleChatInfo NotifyMsg = 8;
    int32 ChatStart = 9;
    int32 CreateId = 10;
}
message GroupOperationInfo {
    GroupKey GKey = 1;
    int32 OpType = 2;
    repeated uint64 AimId = 3;
}
message BitSetInfo {
    GroupKey GKey = 1;
    int32 AimPos = 2;
    int32 AimVal = 3;
}
message ChannelKey {
    int32 CType = 1;
    uint64 CKey = 2;
}
message GroupKey {
    ChannelKey CKey = 1;
    int32 GroupId = 2;
}
message CreateGroupInfo {
    int32 ChannelType = 1;
    repeated uint64 Members = 2;
    string Name = 3;
}
message ModifyGroupInfo {
    GroupKey GKey = 1;
    string Name = 2;
}
message UnionChannelOp {
    uint64 PlayerId = 1;
    uint64 UnionId = 2;
    int32 OpType = 3;
    uint64 OtherId = 4;
}
message GetMembersInfoReq {
    ChannelKey CKey = 1;
    int32 GroupId = 2;
}
message GetMembersInfoRsp {
    repeated PlayerInfo PInfo = 1;
}
message PlayerInfo {
    uint64 PlayerId = 1;
    uint32 PlayerIcon = 2;
    string PlayerName = 3;
    uint32 IsMaster = 4;
}
message GetOnePlrFlagReq {
    uint64 PlayerId = 1;
}
message GetOnePlrFlagRsp {
    int32 Flag = 1;
}
enum FriendRespCode {
    FRIENDOPERATE_OK=0;
    FRIENDNOTEXIST=1;
    MAXFRIENDNUM=2;
    MAXAPPLYNUM=3;
    ALREADYINAPPLYLIST=4;
    ALREADYINFRIENDLIST=5;
}
message PlayerId {
    uint64 Id = 1;
}
message Friend {
    uint64 PlayerId = 1;
    uint32 PlayerIcon = 2;
    string PlayerName = 3;
}
message FriendList {
    repeated Friend Friends = 1;
    repeated Friend Applys = 2;
}
message Item {
    uint32 Id = 1;
    uint32 Cnt = 2;
}
message UseItem {
    uint32 Id = 1;
    uint32 Cnt = 2;
    uint32 SelectId = 3;
    uint32 DirectUse = 4;
}
message ItemInfoReq {
}
message ItemInfoRsp {
    repeated Item Item = 1;
}
message ItemInfo {
    repeated Item Item = 1;
}
message UseItemReq {
    repeated UseItem Item = 1;
}
message UseItemRsp {
    int32 Result = 1;
    repeated Item Item = 2;
    repeated PlayerResource Res = 3;
}
message UseItemsToHero {
    int32 HeroType = 1;
    repeated Item Items = 2;
}
message SynthetizeItemReq {
    repeated Item Src = 1;
    uint32 TargetId = 2;
}
message SynthetizeItemRsp {
    int32 Result = 1;
    repeated Item Item = 2;
}
message BuyAndUseItemReq {
    int32 BuyType = 1;
    repeated Item Item = 2;
}
message BuyAndUseItemRsp {
    int32 Result = 1;
    repeated Item Item = 2;
    repeated PlayerResource Res = 3;
}
enum UnionRespCode {
    UNIONRESP_OK=0;
    ABBR_USED=1;
    ABBR_ERROR=2;
    NAME_USED=3;
    NAME_ERROR=4;
    SCREEN_WORD=5;
    MONEY_NOTENOUGH=6;
    POWER_LIMIT=7;
    MEMBER_FULL=8;
    UNION_DISBANDED=9;
    NO_AUTHORITY=10;
    INTRO_ERROR=11;
    OPERATE_ILLEGA=12;
    UNION_NOTEXIST=13;
    MEMBER_NOTEXIST=14;
    MEMBER_MAXJOBLEVEL=15;
    MEMBER_MINJOBLEVEL=16;
    NOT_LEADER=17;
    PLAYER_NOTEXIST=18;
    APPLY_MAX=19;
    IN_UNION=20;
    HAD_INVITED=21;
    HAD_REFUSEDCD=22;
    APPLY_NOTINAPPLYLIST=23;
    INVITE_NOTININVITELIST=24;
    DISMISS_NOT_ALLOW=25;
    RELEADER_CD=26;
    LEADER_WITHDRAWAL=27;
    WITHDRAWAL_CD=28;
}
enum UnionJoinType {
    JOIN_INVAILD=0;
    JOIN_FREEDOM=1;
    JOIN_BYAPPLY=2;
}
enum UnionJob {
    JOB_R0=0;
    JOB_R1=1;
    JOB_R2=2;
    JOB_R3=3;
    JOB_R4=4;
    JOB_R5=5;
}
message UnionInfo {
    uint64 UnionId = 1;
    string Abbr = 2;
    string Name = 3;
    string Intro = 4;
    uint32 JoinType = 5;
    uint64 Power = 6;
    uint64 Badge = 7;
    uint32 MemberNum = 8;
    uint32 Language = 9;
    uint32 LeaderIcon = 10;
    uint64 LeaderId = 11;
    string LeaderName = 12;
    uint32 HadApply = 13;
    uint32 Powerlimit = 14;
    uint64 DismissTime = 15;
}
message UnionMemberInfo {
    uint64 PlayerId = 1;
    string Name = 2;
    uint32 Icon = 3;
    uint64 Power = 4;
    uint32 Kill = 5;
    uint32 Job = 6;
    uint32 Title = 7;
    uint32 Online = 8;
    uint32 Level = 9;
}
message ApplyPlayerInfo {
    uint64 PlayerId = 1;
    string Name = 2;
    uint32 Icon = 3;
    uint64 Power = 4;
    uint32 Kill = 5;
}
message CreateArgs {
    string Abbr = 1;
    string Name = 2;
    string Intro = 3;
    uint32 JoinType = 4;
    uint32 PowerLimit = 5;
    uint64 Badge = 6;
    uint32 Language = 7;
}
enum UnionLoseReason {
    REASON_WITHDRAWAL=0;
    REASON_TAKEOFF=1;
    REASON_DISMISS=2;
}
message UnionOperateMsg {
    UOperateType Operate = 1;
    uint64 UnionId = 2;
    uint64 PlayerId = 3;
    uint64 OtherId = 4;
    enum UOperateType {
        APPLY=0;
        CANCELAPPLY=1;
        AGREEAPPLY=2;
        REFUSEAPPLY=3;
        JOIN=4;
        WITHDRAWAL=5;
        TAKEOFF=6;
        INVITE=7;
        REFUSEINVITE=8;
        AGREEINVITE=9;
        DISMISS=10;
        CANCELDISMISS=11;
    }
}
message UnionJobMsg {
    UOperateJobType Operate = 1;
    uint64 PlayerId = 2;
    uint64 OtherId = 3;
    uint32 Job = 4;
    uint32 Title = 5;
    enum UOperateJobType {
        CONFERTITLE=0;
        CHANGEJOB=1;
        ABDICATE=2;
    }
}
message UnionId {
    uint64 Id = 1;
}
message UnionList {
    repeated UnionInfo List = 1;
    uint32 Applynum = 2;
}
message ApplyPlayerList {
    repeated ApplyPlayerInfo UnionList = 1;
}
message UnionData {
    UnionInfo UnionInfo = 1;
    repeated UnionMemberInfo Members = 2;
}
message UnionMembers {
    repeated UnionMemberInfo Members = 1;
}
message SearchArgs {
    string Keyworld = 1;
    uint32 Language = 2;
}
message SearchedPlayerInfo {
    uint64 PlayerId = 1;
    string Name = 2;
    uint32 Icon = 3;
    uint64 Power = 4;
    uint32 Level = 5;
    uint32 Kill = 6;
}
message InvitePlayers {
    repeated SearchedPlayerInfo List = 1;
}
message EnterServerReq {
    string AccId = 1;
    string Token = 2;
    uint64 RoleId = 3;
}
message EnterServerRsp {
    int32 Result = 1;
    PlayerBaseInfo PlayerBaseInfo = 2;
    PlayerHeroInfo PlayerHeroInfo = 3;
    PlayerSoldierInfo PlayerSoldierInfo = 4;
    BuildingsInfo BuildingsInfo = 5;
    WsPlayerInfo WsplayerInfo = 6;
    UnionData UnionInfo = 7;
    repeated Friend PlayerBlockList = 8;
    PlayerTasksData TaskData = 9;
    CommodityList Itemlist = 10;
    PlayerHeroesLevel HeroesLevelInfo = 11;
    PlayerAllBarriers BarriersInfo = 12;
    repeated uint32 NewbieGuide = 13;
    uint64 ServerOpenTime = 14;
    uint64 ServerTime = 15;
}
message CreateRoleReq {
    string AccId = 1;
    string RoleName = 2;
}
message CreateRoleRsp {
    int32 Result = 1;
    uint64 RoleId = 2;
}
message EnterSceneReq {
    uint64 RoleId = 1;
    string AccId = 2;
    string FrontendId = 3;
}
message EnterSceneRsp {
    int32 Result = 1;
    PlayerBaseInfo PlayerBaseinfo = 2;
    PlayerHeroInfo PlayerHeroInfo = 3;
    PlayerSoldierInfo PlayerSoldierInfo = 4;
    BuildingsInfo PlayerBuildings = 5;
    WsPlayerInfo WsplayerInfo = 6;
    UnionData UnionInfo = 7;
    repeated Friend PlayerBlockList = 8;
    PlayerTasksData TaskData = 9;
    CommodityList Itemlist = 10;
    PlayerHeroesLevel HeroesLevelInfo = 11;
    PlayerAllBarriers BarriersInfo = 12;
    repeated uint32 NewbieGuide = 13;
    uint64 ServerOpenTime = 14;
    uint64 ServerTime = 15;
}
message disconnectMsg {
    uint64 Id = 1;
    string Reason = 2;
}
message vect2 {
    float X = 1;
    float Y = 2;
}
message CurPos {
    int32 Level = 1;
    float PosX = 2;
    float PosY = 3;
}
enum WsObjState {
    STATE_INIT=0;
    STATE_STATION=1;
    STATE_MARCH=2;
    STATE_COLLECTING=3;
    STATE_ATKING=4;
    STATE_RETURN=5;
    STATE_RECYCLE=6;
    STATE_TRANSFER=7;
}
enum WsEntityType {
    ENTITY_PLAYER=0;
    ENTITY_MONSTER=1;
    ENTITY_RESOURCE=2;
    ENTITY_BUILDING=3;
    ENTITY_TROOP=4;
    ENTITY_SCENEOBJ=5;
    ENTITY_TRANSFERGATE=6;
    ENTITY_LAND=7;
    ENTITY_TRADINGPORT=8;
    ENTITY_MONSTEROUTPOST=9;
    ENTITY_MAX_NUM=10;
}
message WsObjInfo {
    uint64 EntityId = 1;
    uint32 Type = 2;
    int32 Level = 3;
    float PosX = 4;
    float PosY = 5;
    uint64 UnionId = 6;
    string UnionName = 7;
    uint64 UnionBadge = 8;
    uint64 PlayerId = 9;
    string PlayerName = 10;
    int32 State = 11;
    int32 ResId = 12;
    float StartPosX = 13;
    float StartPosY = 14;
    float EndPosX = 15;
    float EndPosY = 16;
    float Movespeed = 17;
    int32 BattleId = 18;
    uint64 TransferGate1 = 19;
    uint64 TransferGate2 = 20;
    uint64 TimeMs = 21;
    BuildingsInfo PlayerBuildings = 22;
    repeated vect2 Path = 23;
    int32 PathIndex = 24;
    uint64 SummonerId = 25;
}
message WsBuildingsInfo {
    uint64 EntityId = 1;
    uint64 PlayerId = 2;
    float PosX = 3;
    float PosY = 4;
    BuildingsInfo PlayerBuildings = 5;
}
message WsCollecter {
    uint64 PlayerId = 1;
    uint64 UnionId = 2;
    string UnionName = 3;
    string PlayerName = 4;
    uint32 Speed = 5;
    uint32 CurNum = 6;
    uint32 TotalNum = 7;
    uint64 TroopId = 8;
    uint64 EntityId = 9;
}
message WsResInfo {
    uint64 EntityId = 1;
    uint32 ResNum = 2;
    WsCollecter Collecter = 3;
    string OwnerUnionName = 4;
    float PosX = 5;
    float PosY = 6;
}
message Troop {
    repeated TroopUnit Troopunits = 1;
    repeated vect2 Path = 2;
    uint64 TarEntityId = 3;
    uint32 Operate = 4;
    uint64 TransferGate1 = 5;
    uint64 TransferGate2 = 6;
    WsBattlePara BattlePara = 7;
    uint32 Param = 8;
}
enum ConfigTroopType {
    EXPEDITION_ARMY=0;
    EXPEDITION_CASTLE=1;
}
message ConfigTroop {
    uint32 Id = 1;
    uint32 Type = 2;
    repeated TroopUnit Troopunits = 3;
    repeated int32 ActiveSkills = 4;
}
message ConfigTroopList {
    repeated ConfigTroop Troops = 1;
}
message TroopListReqPara {
    uint64 PlayerId = 1;
    ConfigTroopType Type = 2;
}
enum WsOperateType {
    OPERATE_MOVE=0;
    OPERATE_COLLECT=1;
    OPERATE_ATK=2;
    OPERATE_RETURN=3;
    OPERATE_STOP=4;
}
message WsMarch {
    uint64 EntityId = 1;
    repeated vect2 Path = 2;
    uint64 TarEntityId = 3;
    uint32 Operate = 4;
    uint64 TransferGate1 = 5;
    uint64 TransferGate2 = 6;
    WsBattlePara BattlePara = 7;
    uint32 Param = 8;
}
message OperateMsg {
    int32 Operate = 1;
    uint64 Arg1 = 2;
    uint64 Arg2 = 3;
    uint64 Arg3 = 4;
    uint64 Arg4 = 5;
}
enum PlayerResType {
    UNKNOWN=0;
    FOOD=1;
    STONE=2;
    IRON=3;
    CRYSTAL=4;
    FREEGOLD=5;
    MONEYGOLD=6;
    GOLD=7;
    ACTIONTOKEN=8;
}
message ResourceValue {
    uint32 ResType = 1;
    uint64 ResValue = 2;
}
message WsObjList {
    repeated WsObjInfo AddList = 1;
    repeated uint64 DelList = 2;
}
message WsObjId {
    uint64 EntityId = 1;
}
enum WsRespCode {
    OPERATE_OK=0;
    RES_NOTEXIST=1;
    RES_NOTREACHABLE=2;
    TROOP_MAXNUM=3;
    TROOP_LEADERIDERROR=4;
    TROOP_SOLDIERIDERROR=5;
    TROOP_ATKFRIENDTARGET=6;
    TROOP_INVAILDTARGET=7;
    TRANSFER_INVAILDTRANSFERGATE=8;
    CASTLE_NOTEXIST=9;
    MOVE_INVALIDTARGETPOS=10;
    TROOP_NOTEXIST=11;
    TROOP_NOTOWNER=12;
    TROOP_NOTSELECTLEADER=13;
    TROOP_NOTSELECTSOLDIER=14;
    MONSTER_CANTJUMPATK=15;
}
message WsUnionList {
    repeated WsObjInfo Unions = 1;
}
message WsTroopBasicInfo {
    uint64 EntityId = 1;
    int32 State = 2;
    int32 LeaderId = 3;
    float StartPosX = 4;
    float StartPosY = 5;
    float EndPosX = 6;
    float EndPosY = 7;
    float CurPosX = 8;
    float CurPosY = 9;
    float Speed = 10;
    int32 TotalNum = 11;
    int32 CurLoad = 12;
    int32 MaxLoad = 13;
    uint64 TimeMs = 21;
}
message WsTroopDetail {
    int32 State = 1;
    WsResInfo ResInfo = 2;
    WsObjInfo MarchInfo = 3;
}
message WsPlayerInfo {
    WsObjInfo CastleInfo = 1;
    repeated WsTroopBasicInfo Troops = 2;
}
message GMCreateRoleReq {
    string AccId = 1;
    string RoleName = 2;
    uint64 PlayerId = 3;
    string FrontendId = 4;
}
message WsCastleMove {
    vect2 TarPos = 1;
    uint64 TarEntityId = 2;
    WsOperateType Operate = 3;
    uint64 TransferGate1 = 4;
    uint64 TransferGate2 = 5;
    WsBattlePara BattlePara = 6;
}
message WsTransferGateInfo {
    uint64 EntityId = 1;
    uint64 UnionId = 2;
    int32 ResId = 3;
}
message WsTransferGateList {
    repeated WsTransferGateInfo List = 1;
}
message WsPath {
    repeated vect2 Point = 1;
}
enum SearchObjType {
    TYPE_MONSTER=0;
    TYPE_FOOD=1;
    TYPE_STONE=2;
    TYPE_IRON=3;
    TYPE_CRYSTAL=4;
}
message SearchPara {
    SearchObjType Type = 1;
    uint32 Level = 2;
}
message SearchedObject {
    uint64 EntityId = 1;
    float PosX = 2;
    float PosY = 3;
}
message SearchedObjectList {
    repeated SearchedObject List = 1;
}
enum BookmarkRespCode {
    RESP_OK=0;
    NAMELENGTH_LIMIT=1;
    TOTALNUM_LIMIT=2;
}
message Bookmark {
    uint32 Type = 1;
    string Name = 2;
    uint32 X = 3;
    uint32 Y = 4;
}
message BookmarkList {
    repeated Bookmark List = 1;
}
message RewardInfo {
    uint32 Type = 1;
    uint32 Tid = 2;
    float Count = 3;
}
message GetNewRewardReq {
    uint64 PlayerId = 1;
    repeated RewardInfo List = 2;
}
message MapElement {
    int32 PlaneTabid = 1;
    int32 PlanePosX = 2;
    int32 PlanePosY = 3;
    int32 Rot = 4;
    int32 BuildLev = 5;
    int32 PlaneSerial = 6;
    int32 Hp = 7;
    int32 HpMax = 8;
}
message BatMainSkillInfo {
    int32 SkillTid = 1;
    int32 UseTimes = 2;
}
message BattleHeroSkill {
    int32 HeroStar = 1;
    repeated int32 Skills = 2;
}
enum EBatGroup {
    BATGROUPNULL=0;
    BATGROUPRED=1;
    BATGROUPBLUE=2;
}
message WsBattlePara {
    int32 AtkOffX = 1;
    int32 AtkOffY = 2;
    int32 DefOffX = 3;
    int32 DefOffY = 4;
    uint32 AtkDir = 5;
}
message Soldier {
    uint32 SoldierId = 1;
    uint32 SoldierNum = 2;
}
message TroopUnit {
    uint32 LeaderId = 1;
    repeated Soldier Soldiers1 = 2;
    uint32 Pos = 3;
    uint32 Group = 4;
    uint32 LeaderStar = 5;
    uint32 LeaderLvId = 6;
    uint32 ArmyId = 7;
    uint32 BornX = 8;
    uint32 BornY = 9;
    int32 Hp = 10;
    int32 HpMax = 11;
}
message BattleRoleData {
    uint64 RoleId = 1;
    EBatGroup Group = 2;
    repeated MapElement Element = 3;
    repeated TroopUnit Army = 4;
    uint64 TroopId = 5;
    int32 Atktype = 6;
    int32 Roletype = 7;
    int32 OffX = 8;
    int32 OffY = 9;
    repeated AttrInc TechAttrs = 10;
    repeated int32 Mskills = 11;
    repeated BattleHeroSkill HeroSkills = 12;
    int32 AutoAssign = 13;
    repeated BatMainSkillInfo Mainskills = 14;
    int32 Assist = 15;
}
enum EBattleType {
    TYPE_UNKNOWN=0;
    TYPE_PVP=1;
    TYPE_EXPEDITION=2;
    TYPE_PKMONSTER=3;
    TYPE_MUTIBATTLES=4;
}
enum ATK_TYPE {
    ATK_UNKNOWN=0;
    ATK_CASTLE=1;
    ATK_TROOP=2;
}
enum ROLE_TYPE {
    ROLE_UNKNOWN=0;
    ROLE_PLAYER=1;
    ROLE_MONSTER=2;
}
message BattleData {
    string Sid = 1;
    uint32 BattleTabid = 2;
    repeated BattleRoleData Roles = 3;
    uint32 AtkDir = 4;
    uint32 BattleType = 5;
    uint32 BattlePhase = 6;
    uint32 BattleMaxphase = 7;
}
message BattleDataClient {
    uint32 BattleId = 1;
    BattleData Data = 2;
    uint32 SrcLen = 3;
    bytes FrameData = 4;
}
message BattleExitSoldier {
    Soldier Sol = 1;
    uint32 Pos = 2;
}
message BattleExitBuild {
    int32 PlaneSerial = 1;
    int32 Hp = 2;
    int32 HpMax = 3;
}
message BattleExitHero {
    int32 HeroLv = 1;
    int32 HeroStar = 2;
    int32 Hp = 3;
    int32 HpMax = 4;
}
message BattleExitSkill {
    int32 SkillTid = 1;
    int32 LeftTimes = 2;
}
message BattleExitRoleData {
    uint64 RoleId = 1;
    EBatGroup Group = 2;
    repeated BattleExitSoldier Leftex = 3;
    repeated BattleExitSoldier Hurtedex = 4;
    repeated BattleExitSoldier Heavyex = 5;
    repeated BattleExitSoldier Deadex = 6;
    int32 LostRadio = 7;
    int32 Atktype = 8;
    int32 Roletype = 9;
    int32 MainGunSkillTimes = 10;
    int32 DestroyBuildNum = 11;
    repeated KeyValuePair UseSkillTimes = 12;
    repeated BattleExitBuild Builds = 13;
    repeated BattleExitHero Heros = 14;
    repeated BattleExitSkill Mainskills = 15;
}
message PhaseBattleResult {
    int32 BattleId = 1;
    int32 Phase = 2;
    repeated MapElement Element = 3;
    repeated TroopUnit Army = 4;
    int32 Assist = 5;
}
message NextPhaseBattle {
    int32 BattleId = 1;
    int32 Phase = 2;
    WsBattlePara BattlePara = 3;
}
message BattleResult {
    uint32 BattleId = 1;
    uint32 Result = 2;
    repeated BattleExitRoleData ExitRoles = 3;
}
message BattleBlockInfo {
    repeated MapElement Element = 1;
}
message QuickShot {
    uint32 BattleId = 1;
    uint32 SrcLen = 2;
    bytes FrameData = 3;
    repeated uint64 SyncRids = 4;
}
enum EBatFrameOpT {
    FRAMEOPT_NULL=0;
    FRAMEOPT_USESKILL=1;
    FRAMEOPT_PRIORITYATK=2;
    FRAMEOPT_AUTOASSIGNSOL=3;
    FRAMEOPT_MANUALASSINGSOL=4;
    FRAMEOPT_FALLBACK=5;
    FRAMEOPT_CHECKFRAMEINTER=6;
    FRAMEOPT_REQFRAMEDATA=7;
    FRAMEOPT_MAX=8;
}
message BattleSyncFrameOps {
    uint32 BattleId = 1;
    uint32 FrameId = 2;
    uint64 RoleId = 3;
    uint32 OpType = 4;
    repeated uint32 OpParams = 5;
}
message ReqBattleFrameData {
    uint32 BattleId = 1;
    uint32 FrameId = 2;
    uint64 RoleId = 3;
}
message BattleFrameOp {
    uint32 FrameId = 1;
    uint64 RoleId = 2;
    uint32 OpType = 3;
    repeated uint32 OpParams = 4;
}
message ResponseBattleFrameData {
    uint32 BattleId = 1;
    uint32 FrameId = 2;
    repeated BattleFrameOp Ops = 3;
    uint32 Opcode = 4;
    uint32 DeltaNum = 5;
    repeated uint64 SyncRids = 6;
}
message BroadcastFrames {
    uint32 BattleId = 1;
    repeated BattleFrameOp Ops = 2;
    uint32 FrameBound = 3;
    repeated uint64 SyncRids = 4;
    uint32 WinGroup = 5;
}
enum Task_Type {
    TASKTYPEBEGIN=0;
    MAIN=1;
    BRANCH=2;
    DAILY=3;
}
enum Task_Condition {
    TASKCONDBEGIN=0;
    COLLECTRESOURCE_S=1;
    COLLECTRESOURCE_D=2;
    RESEARCHTIMES_D=3;
    GETTECHNOLOGY=4;
    KILLMONSTER_D=5;
    TRAINSOLDIER_D=6;
    TRAINSOLDIER_S=7;
    BUILDLEVEL=8;
    CLICKGETREWARD=9;
    TRAINSOIDIER_TYPE_D=10;
    TRAINSOLDIER_TYPE_S=11;
    PUBRECRUITTIMES_D=12;
    PUBRECRUITTIMES_S=13;
    GETRESPRODUCTTIMES_D=14;
    GETRESPRODUCTTIMES_S=15;
    USEITEMNUM_D=16;
    USEITEMNUM_S=17;
    TREATSOLDIERNUM_D=18;
    TREATSOLDIERNUM_S=19;
    USEMAINGUNSKILLTIMES_D=20;
    USEMAINGUNSKILLTIMES_S=21;
    DESTROYBUILDINGNUM_D=22;
    DESTROYBUILDINGNUM_S=23;
    HEROLEVELUPTIMES_D=24;
    REACHLEVEL_HERONUM_S=25;
    HEROSTARINCTIMES_D=26;
    REACHSTAR_HERONUM_S=27;
    GETRESPRODUCTNUM_D=28;
    GETRESPRODUCTNUM_S=29;
    BARRIERCHALLENGESTIME_D=30;
    PASSONEBARRIER_S=31;
    KILLMONSTERBYLEVEL_S=32;
    KILLMONSTERBYLEVEL_D=33;
    USEITEMNUMBYTYPE_S=34;
    USEITEMNUMBYTYPE_D=35;
    BUILDINGLEVELUPTIMES_D=36;
    CREATEBUILDINGTIMES_D=37;
    CREATEBUILDINGTIMES_S=38;
}
enum Task_Status {
    TASKNONE=0;
    SLEEP=1;
    STARTED=2;
    FINISH=3;
    ERROR=4;
}
message TaskConditionInfo {
    int32 ConditionType = 1;
    int32 SonType = 2;
    int32 Val = 3;
    uint64 PlayerId = 4;
    int32 AimVal = 5;
}
message SingleTaskInfo {
    int32 TaskType = 1;
    int32 TaskId = 2;
    int32 Status = 3;
    repeated TaskConditionInfo Progress = 4;
}
message PlayerTasksData {
    repeated SingleTaskInfo TaskList = 1;
    int32 ActivePoint = 2;
    repeated int32 BoxRecord = 3;
    int32 LastMainLvl = 4;
}
enum TradingRespCode {
    TRADINGRESP_OK=0;
    TRADING_RESNOTENOUGH=2;
    INVALID_PORTID=3;
    OUT_DISTANCE=4;
    DIFF_PRICE=5;
    STORE_FULL=6;
    STORE_ERROR=7;
    INVALID_ITEMID=8;
    INVALID_ITEMNUM=9;
}
message CommodityInfo {
    uint32 ItemId = 1;
    uint32 ItemNum = 2;
    uint32 BuyPrice = 3;
    uint32 PortId = 4;
}
message PortSellPrice {
    uint32 ItemId = 1;
    uint32 Price = 2;
    uint32 ScarcePortId = 3;
    uint32 FashionPortId = 4;
}
message PortInfo {
    uint32 PortTableId = 1;
    uint64 ResetTime = 2;
    repeated PortSellPrice List = 4;
    uint32 ScarceItemId = 5;
    uint64 ScarceUpdateTime = 6;
    uint32 FashionItemId = 7;
    uint64 FashionUpdateTime = 8;
    uint32 Prosperity = 9;
    uint32 ScarceItemPrice = 10;
    uint32 FashionItemPrice = 11;
}
message ItemIdNum {
    uint32 ItemId = 1;
    uint32 ItemNum = 2;
}
message BuyItem {
    uint64 PortEntityId = 1;
    repeated ItemIdNum Items = 2;
}
message SellItem {
    uint64 PortEntityId = 1;
    repeated ItemIdNum Items = 2;
}
message tradingPortId {
    uint64 PortEntityId = 1;
}
message CommodityList {
    repeated CommodityInfo List = 1;
}
enum TradingPortType {
    TYPE_NULL=0;
    TYPE_PRODUCT=1;
    TYPE_SCARCE=2;
    TYPE_FASHION=3;
}
message TradingPortInfo {
    uint64 PortId = 1;
    uint32 Prosperity = 2;
    uint32 PortType = 3;
    uint64 PopRefreshTtime = 4;
}
message GoodsPortInfo {
    uint32 ItemId = 1;
    TradingPortInfo PortInfo = 2;
}
message GoodsInfo {
    uint32 ItemId = 1;
    uint32 BuyPortId = 2;
    uint32 Buyprosperity = 3;
    uint32 SellPortId = 4;
    uint32 SellPortType = 5;
    uint32 Sellprosperity = 6;
}
message TradingMainInfo {
    uint32 Exp = 2;
    GoodsPortInfo BuyGoods = 3;
    GoodsPortInfo SellGoods = 4;
    repeated GoodsInfo Goods = 5;
}
message AutoTrade {
    uint32 TarAreaId = 1;
    uint32 Time = 2;
}
message TradingMarket {
    repeated GoodsPortInfo Goods = 1;
}
message PortAndCommodityInfo {
    uint32 ItemId = 1;
    uint64 PortId = 2;
}
enum RouteStrategy {
    TYPE_NEAREST=0;
    TYPE_SAMEAREA=1;
    TYPE_NEXTAREA=2;
    TYPE_TOCENTERAREA=3;
    TYPE_FROMCENTERAREA=4;
}
message TradeRouteInfo {
    uint32 Income = 1;
    uint32 FinishTime = 2;
    repeated PortAndCommodityInfo Port = 3;
}
enum MailType {
    UNKNOWN=0;
    PERSONAL=1;
    REPORT=2;
    UNION=3;
    SYSTEM=4;
    SEND=5;
}
enum MailReceiverType {
    MRT_UNKNOWN=0;
    MRT_PLAYER=1;
    MRT_MULTI_PLAYER=2;
    MRT_UNION=3;
    MRT_SERVER=4;
    MRT_GLOBAL=5;
}
message MailID {
    MailType Ty = 1;
    uint64 Id = 2;
}
message Offset {
    MailType Ty = 1;
    uint64 Oft = 2;
}
message Title {
    MailID Id = 1;
    uint32 ConfigId = 2;
    string Name = 3;
    uint64 CreateTime = 4;
    uint64 CollectTime = 5;
    uint32 Read = 6;
    uint32 Recv = 7;
    uint32 ImageId = 8;
    string Title_ = 9;
    uint64 SenderId = 10;
}
message Res {
    int32 Ty = 1;
    int32 Cnt = 2;
}
message Content {
    MailID Id = 1;
    string Content_ = 2;
    repeated Res Res = 3;
    repeated Item Item = 4;
}
message GetNewerMailTitleReq {
    repeated Offset Offset = 1;
}
message GetNewerMailTitleRsp {
    repeated Title T = 1;
    repeated Offset Offset = 2;
}
message GetMailTitleReq {
    repeated MailID Id = 1;
}
message GetMailTitleRsp {
    repeated Title T = 1;
}
message GetMailContentReq {
    repeated MailID Id = 1;
}
message GetMailContentRsp {
    repeated Content C = 1;
}
message ReadMailReq {
    MailID Id = 1;
}
message ReadMailRsp {
    int32 Result = 1;
}
message RecvMailAwardReq {
    MailID Id = 1;
}
message RecvMailAwardRsp {
    int32 Result = 1;
}
message ReadRecvAllMailReq {
    repeated MailID Id = 1;
}
message ReadRecvAllMailRsp {
    int32 Result = 1;
}
message CollectMailReq {
    MailID Id = 1;
}
message CollectMailRsp {
    int32 Result = 1;
}
message DeleteMailReq {
    repeated MailID Id = 1;
}
message DeleteMailRsp {
    int32 Result = 1;
}
message MailReceiver {
    uint64 ReceiverId = 1;
    string ReceiverName = 2;
    uint32 ReceiverImageId = 3;
}
message SendMailReq {
    repeated MailReceiver Receiver = 1;
    string Title = 2;
    string Content = 3;
}
message SendMailRsp {
    int32 Result = 1;
    uint64 Id = 2;
}
message NotifyNewMail {
    repeated MailID Id = 1;
}
message MailAttach {
    uint64 PlayerId = 1;
    repeated Res Res = 2;
    repeated Item Item = 3;
}
message SvrSendMailReq {
    MailType Ty = 1;
    uint64 SenderId = 2;
    string SenderName = 3;
    uint32 SenderImageId = 4;
    MailReceiverType ReceiverType = 5;
    uint64 Receiver = 6;
    repeated MailReceiver RecvPlayer = 7;
    uint64 ReserveTime = 8;
    uint32 ConfigId = 9;
    string Title = 10;
    string Content = 11;
    repeated MailAttach Attach = 12;
}
message SvrSendMailRsp {
    int32 Result = 1;
    uint64 Id = 2;
}
message GMSendMail {
    string RecTy = 1;
    string RecTyId = 2;
    repeated uint64 ReceiverId = 3;
    string Title = 4;
    string Content = 5;
    repeated Item Item = 6;
    repeated Res Res = 7;
    uint64 ReserveTime = 8;
}
message PlayerTransferToDstSvrReq {
    uint32 DstServerId = 2;
}
message PlayerTransferToDstSvrRsp {
    int32 Result = 1;
}
message AskTransferToDstSvrReq {
    PlayerBaseInfo PlayerBaseInfo = 1;
}
message AskTransferToDstSvrRsp {
    int32 Result = 1;
}
message StartExpedition {
    repeated ConfigTroop Troops = 1;
    WsBattlePara BattlePara = 2;
    uint32 StageId = 3;
}
message ExpeditionBattleEnd {
    uint32 StageId = 1;
    uint32 Win = 2;
    repeated Soldier Left = 3;
    repeated Soldier Hurted = 4;
    repeated Soldier Heavy = 5;
    repeated Soldier Dead = 6;
}
message HeroEquip {
    int32 EquipId = 1;
    int32 EquipType = 2;
    int32 AffixId = 3;
    int32 HeroId = 4;
}
message GMEquipInfo {
    int32 EquipType = 1;
    int32 AffixId = 2;
}
message Stuff {
    uint32 StuffId = 1;
    uint32 StuffCount = 2;
}
message StuffList {
    repeated Stuff Stuff = 1;
}
message SynthetizeStuffReq {
    repeated Stuff Stuff = 1;
    uint32 TargetId = 2;
}
message SynthetizeStuffRsp {
    int32 Result = 1;
    repeated Stuff Stuff = 2;
}
message HeroEquipList {
    repeated HeroEquip HeroList = 1;
}
message SetHeroEquipReq {
    int32 HeroId = 1;
    int32 OldEquipId = 2;
    int32 NewEquipId = 3;
}
message GetStuffsReq {
}
message GetStuffsRsp {
    repeated Stuff Stuff = 1;
}
message GetAllEquipReq {
}
message GetAllEquipRsp {
    repeated HeroEquip Equip = 1;
    repeated Stuff Stuff = 2;
}
message ComposeEquipReq {
    int32 EquipType = 1;
}
message ComposeEquipRsp {
    int32 Result = 1;
    HeroEquip Equip = 2;
    repeated Stuff Stuff = 3;
}
message DeComposeEquipReq {
    HeroEquip Equip = 1;
}
message DeComposeEquipRsp {
    int32 Result = 1;
    repeated Stuff Stuff = 2;
}
message ComposeManyStuffReq {
    int32 Result = 1;
    repeated StuffList StuffList = 2;
}
message ComposeManyStuffRsp {
    int32 Result = 1;
    repeated Stuff Stuff = 2;
}