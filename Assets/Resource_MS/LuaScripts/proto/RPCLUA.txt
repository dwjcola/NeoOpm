--===== @Head start============================================================
--此文件为工具生成，禁止修改此文件中的代码，会被工具覆盖
--===== @Head end==============================================================
RPCLUA={};

RPCLUA.test_Handle={};

-- requstMsg:"MessageTest",结构的luatable 、
function RPCLUA.test_Handle.Test1(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(2000000, "MessageTest",requstMsg,"MessageTest",callback,backTable);
end
-- requstMsg:无参
function RPCLUA.test_Handle.Test2(callback,backTable)--

    PomeloCLUA:PbRequest(2000001,nil,nil,"MessageTest",callback,backTable);
end
-- requstMsg:luatable 依次是"int32",
function RPCLUA.test_Handle.Test3(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">i4", requstMsg);
    PomeloCLUA.pomeloClient:request(2000002,reqMsg,function (buffer,offset)
                --ans 是 MessageTest 结构得 luatable
                local ans=PomeloCLUA:PBDecode("MessageTest",buffer,offset);
                callback(backTable,ans);
            end);
end
-- requstMsg:"MessageTest2",结构的luatable 、
function RPCLUA.test_Handle.Test4(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("MessageTest2", requstMsg)
    PomeloCLUA.pomeloClient:request(2000003,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:无参
function RPCLUA.test_Handle.Test5(callback,backTable)--

    PomeloCLUA.pomeloClient:request(2000004,nil,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:luatable 依次是"int32",
function RPCLUA.test_Handle.Test6(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">i4", requstMsg);
    PomeloCLUA.pomeloClient:request(2000005,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
return RPCLUA;
