--===== @Head start============================================================
--===== @Head end==============================================================
RPCLUA={};

RPCLUA.wbBuilding_Handler={};

-- requstMsg:"BuildingsInfo",结构的luatable 、
function RPCLUA.wbBuilding_Handler.UpdateAllLocation(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(0, "BuildingsInfo",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"BlockInfo",结构的luatable 、
function RPCLUA.wbBuilding_Handler.UpdateLocation(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(1, "BlockInfo",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"BuildingsInfo",结构的luatable 、
function RPCLUA.wbBuilding_Handler.UpdateBlocksLocation(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("BuildingsInfo", requstMsg)
    PomeloCLUA.pomeloClient:request(2,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:"BlockInfo",结构的luatable 、
function RPCLUA.wbBuilding_Handler.UpdateLocationForTest(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(3, "BlockInfo",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"BuildingsInfo",结构的luatable 、
function RPCLUA.wbBuilding_Handler.UpdateBlocksLocationForTest(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("BuildingsInfo", requstMsg)
    PomeloCLUA.pomeloClient:request(4,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:"SimpleMsg",结构的luatable 、
function RPCLUA.wbBuilding_Handler.GetBuildingsByType(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(5, "SimpleMsg",requstMsg,"BuildingsInfo",callback,backTable);
end
-- requstMsg:"SimpleMsg",结构的luatable 、
function RPCLUA.wbBuilding_Handler.GetAllBuildings(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(6, "SimpleMsg",requstMsg,"BuildingsInfo",callback,backTable);
end
-- requstMsg:"SimpleMsg",结构的luatable 、
function RPCLUA.wbBuilding_Handler.DoResearch(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("SimpleMsg", requstMsg)
    PomeloCLUA.pomeloClient:request(7,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:"RecruitOption",结构的luatable 、
function RPCLUA.wbBuilding_Handler.PubRecruit(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("RecruitOption", requstMsg)
    PomeloCLUA.pomeloClient:request(8,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:"SimpleMsg",结构的luatable 、
function RPCLUA.wbBuilding_Handler.SetNotShowFlag(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("SimpleMsg", requstMsg)
    PomeloCLUA.pomeloClient:request(9,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:"TrainInfo",结构的luatable 、
function RPCLUA.wbBuilding_Handler.TrainSoldier(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("TrainInfo", requstMsg)
    PomeloCLUA.pomeloClient:request(10,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:luatable 依次是"int32",
function RPCLUA.wbBuilding_Handler.BuildingLevelUp(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">i4", requstMsg);
    PomeloCLUA.pomeloClient:request(11,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:"SoldiersInfo",结构的luatable 、
function RPCLUA.wbBuilding_Handler.treatWounded(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("SoldiersInfo", requstMsg)
    PomeloCLUA.pomeloClient:request(12,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:"KeyValuePair",结构的luatable 、
function RPCLUA.wbBuilding_Handler.setActiveMainSkills(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("KeyValuePair", requstMsg)
    PomeloCLUA.pomeloClient:request(13,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:"QueueInfo",结构的luatable 、
function RPCLUA.wbBuilding_Handler.StartAndFinishQueue(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("QueueInfo", requstMsg)
    PomeloCLUA.pomeloClient:request(14,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:luatable 依次是"int32",
function RPCLUA.wbBuilding_Handler.FinishStartedQueue(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">i4", requstMsg);
    PomeloCLUA.pomeloClient:request(15,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:"AccelerateInfo",结构的luatable 、
function RPCLUA.wbBuilding_Handler.AccelerateQueue(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("AccelerateInfo", requstMsg)
    PomeloCLUA.pomeloClient:request(16,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:luatable 依次是"int32",
function RPCLUA.wbBuilding_Handler.CancelQueue(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">i4", requstMsg);
    PomeloCLUA.pomeloClient:request(17,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:luatable 依次是"int32",
function RPCLUA.wbBuilding_Handler.PlayerGetProduct(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">i4", requstMsg);
    PomeloCLUA.pomeloClient:request(18,reqMsg,function (buffer,offset)
                --ans 是 GetProductResult 结构得 luatable
                local ans=PomeloCLUA:PBDecode("GetProductResult",buffer,offset);
                callback(backTable,ans);
            end);
end
-- requstMsg:luatable 依次是"int32",
function RPCLUA.wbBuilding_Handler.PlayerGetProductByType(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">i4", requstMsg);
    PomeloCLUA.pomeloClient:request(19,reqMsg,function (buffer,offset)
                --ans 是 GetProductResultAll 结构得 luatable
                local ans=PomeloCLUA:PBDecode("GetProductResultAll",buffer,offset);
                callback(backTable,ans);
            end);
end
-- requstMsg:luatable 依次是"int32",
function RPCLUA.wbBuilding_Handler.GetBuildingAttr(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">i4", requstMsg);
    PomeloCLUA.pomeloClient:request(20,reqMsg,function (buffer,offset)
                --ans 是 BuildingAttrs 结构得 luatable
                local ans=PomeloCLUA:PBDecode("BuildingAttrs",buffer,offset);
                callback(backTable,ans);
            end);
end
-- requstMsg:luatable 依次是"int32",
function RPCLUA.wbBuilding_Handler.RecoveryTurret(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">i4", requstMsg);
    PomeloCLUA.pomeloClient:request(21,reqMsg,function (buffer,offset)
                --ans 是 ReturnMsg 结构得 luatable
                local ans=PomeloCLUA:PBDecode("ReturnMsg",buffer,offset);
                callback(backTable,ans);
            end);
end
-- requstMsg:"ComposeTurretInfo",结构的luatable 、
function RPCLUA.wbBuilding_Handler.ComposeTurret(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(22, "ComposeTurretInfo",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"ComposeInfo",结构的luatable 、
function RPCLUA.wbBuilding_Handler.ComposeManyTurret(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(23, "ComposeInfo",requstMsg,"ComposeBackList",callback,backTable);
end
-- requstMsg:无参
function RPCLUA.wbBuilding_Handler.GetInitEditBuildingScene(callback,backTable)--

    PomeloCLUA:PbRequest(24,nil,nil,"BuildingsAllPlan",callback,backTable);
end
-- requstMsg:"BuildingPlan",结构的luatable 、
function RPCLUA.wbBuilding_Handler.BuildingSceneSave(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(25, "BuildingPlan",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:luatable 依次是"int32",
function RPCLUA.wbBuilding_Handler.ChangeNewScene(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">i4", requstMsg);
    PomeloCLUA.pomeloClient:request(26,reqMsg,function (buffer,offset)
                --ans 是 ReturnMsg 结构得 luatable
                local ans=PomeloCLUA:PBDecode("ReturnMsg",buffer,offset);
                callback(backTable,ans);
            end);
end
RPCLUA.wbBuilding_GM_Handler={};

-- requstMsg:"SimpleMsg",结构的luatable 、
function RPCLUA.wbBuilding_GM_Handler.AddBlock(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(27, "SimpleMsg",requstMsg,"BlockInfo",callback,backTable);
end
-- requstMsg:"GmGetNewTurret",结构的luatable 、
function RPCLUA.wbBuilding_GM_Handler.AddTurret(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("GmGetNewTurret", requstMsg)
    PomeloCLUA.pomeloClient:request(28,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:"KeyValuePair",结构的luatable 、
function RPCLUA.wbBuilding_GM_Handler.TechLevelTo(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("KeyValuePair", requstMsg)
    PomeloCLUA.pomeloClient:request(29,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:"KeyValuePair",结构的luatable 、
function RPCLUA.wbBuilding_GM_Handler.IncBuildingLevel(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("KeyValuePair", requstMsg)
    PomeloCLUA.pomeloClient:request(30,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
RPCLUA.wChat_Handler={};

-- requstMsg:"SingleChatInfo",结构的luatable 、
function RPCLUA.wChat_Handler.ChatEntry(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(31, "SingleChatInfo",requstMsg,"ChatReturn",callback,backTable);
end
-- requstMsg:"ChatRequest",结构的luatable 、
function RPCLUA.wChat_Handler.GetChatDataByRequest(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(32, "ChatRequest",requstMsg,"ChatDatas",callback,backTable);
end
-- requstMsg:"CreateGroupInfo",结构的luatable 、
function RPCLUA.wChat_Handler.CreateGroup(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(33, "CreateGroupInfo",requstMsg,"ChatReturn",callback,backTable);
end
-- requstMsg:"ModifyGroupInfo",结构的luatable 、
function RPCLUA.wChat_Handler.ModifyGroupName(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(34, "ModifyGroupInfo",requstMsg,"ChatReturn",callback,backTable);
end
-- requstMsg:"GroupOperationInfo",结构的luatable 、
function RPCLUA.wChat_Handler.OperateChannelGroup(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(35, "GroupOperationInfo",requstMsg,"ChatReturn",callback,backTable);
end
-- requstMsg:"SimpleMsg",结构的luatable 、
function RPCLUA.wChat_Handler.GetPlayerAllChannelData(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(36, "SimpleMsg",requstMsg,"PlayerChannelData",callback,backTable);
end
-- requstMsg:"BitSetInfo",结构的luatable 、
function RPCLUA.wChat_Handler.SetGroupFlagBit(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("BitSetInfo", requstMsg)
    PomeloCLUA.pomeloClient:request(37,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:"BitSetInfo",结构的luatable 、
function RPCLUA.wChat_Handler.SetFlagBitToPlayer(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("BitSetInfo", requstMsg)
    PomeloCLUA.pomeloClient:request(38,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:"GetMembersInfoReq",结构的luatable 、
function RPCLUA.wChat_Handler.GetAllMembersInfo(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(39, "GetMembersInfoReq",requstMsg,"GetMembersInfoRsp",callback,backTable);
end
-- requstMsg:"GetOnePlrFlagReq",结构的luatable 、
function RPCLUA.wChat_Handler.GetOnePlayerFlag(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(40, "GetOnePlrFlagReq",requstMsg,"GetOnePlrFlagRsp",callback,backTable);
end
RPCLUA.wfGate_Handler={};

-- requstMsg:"EnterServerReq",结构的luatable 、
function RPCLUA.wfGate_Handler.EnterServer(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(41, "EnterServerReq",requstMsg,"EnterServerRsp",callback,backTable);
end
-- requstMsg:"CreateRoleReq",结构的luatable 、
function RPCLUA.wfGate_Handler.CreateRole(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(42, "CreateRoleReq",requstMsg,"CreateRoleRsp",callback,backTable);
end
-- requstMsg:"PlayerId",结构的luatable 、
function RPCLUA.wfGate_Handler.ReconnectServer(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(43, "PlayerId",requstMsg,"EnterServerRsp",callback,backTable);
end
RPCLUA.wfGate_GM_Handler={};

-- requstMsg:"CreateRoleReq",结构的luatable 、
function RPCLUA.wfGate_GM_Handler.GMCreateRoles(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("CreateRoleReq", requstMsg)
    PomeloCLUA.pomeloClient:request(44,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
RPCLUA.wbScene_Handler={};

-- requstMsg:"AttackData",结构的luatable 、
function RPCLUA.wbScene_Handler.StartBattle(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(45, "AttackData",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"CurPos",结构的luatable 、
function RPCLUA.wbScene_Handler.ViewNewPos(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(46, "CurPos",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"Troop",结构的luatable 、
function RPCLUA.wbScene_Handler.CreateTroop(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(47, "Troop",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"WsMarch",结构的luatable 、
function RPCLUA.wbScene_Handler.StartTroopMarch(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(48, "WsMarch",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"OperateMsg",结构的luatable 、
function RPCLUA.wbScene_Handler.TroopReturnHome(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(49, "OperateMsg",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"WsObjId",结构的luatable 、
function RPCLUA.wbScene_Handler.GetResInfo(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(50, "WsObjId",requstMsg,"WsResInfo",callback,backTable);
end
-- requstMsg:"WsObjId",结构的luatable 、
function RPCLUA.wbScene_Handler.GetTroopDetail(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(51, "WsObjId",requstMsg,"WsTroopDetail",callback,backTable);
end
-- requstMsg:无参
function RPCLUA.wbScene_Handler.LeaveWorldScene(callback,backTable)--

    PomeloCLUA:PbRequest(52,nil,nil,"ReturnMsg",callback,backTable);
end
-- requstMsg:"ItemInfoReq",结构的luatable 、
function RPCLUA.wbScene_Handler.ItemInfo(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(53, "ItemInfoReq",requstMsg,"ItemInfoRsp",callback,backTable);
end
-- requstMsg:"UseItemReq",结构的luatable 、
function RPCLUA.wbScene_Handler.UseItem(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(54, "UseItemReq",requstMsg,"UseItemRsp",callback,backTable);
end
-- requstMsg:"SynthetizeItemReq",结构的luatable 、
function RPCLUA.wbScene_Handler.SynthetizeItem(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(55, "SynthetizeItemReq",requstMsg,"SynthetizeItemRsp",callback,backTable);
end
-- requstMsg:"BuyAndUseItemReq",结构的luatable 、
function RPCLUA.wbScene_Handler.BuyAndUseItem(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(56, "BuyAndUseItemReq",requstMsg,"BuyAndUseItemRsp",callback,backTable);
end
-- requstMsg:"WsCastleMove",结构的luatable 、
function RPCLUA.wbScene_Handler.MoveCastle(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(57, "WsCastleMove",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"WsObjId",结构的luatable 、
function RPCLUA.wbScene_Handler.StopMovement(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(58, "WsObjId",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"WsObjId",结构的luatable 、
function RPCLUA.wbScene_Handler.GetTransferGateState(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(59, "WsObjId",requstMsg,"WsTransferGateList",callback,backTable);
end
-- requstMsg:"WsObjId",结构的luatable 、
function RPCLUA.wbScene_Handler.StartCameraFollow(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(60, "WsObjId",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:无参
function RPCLUA.wbScene_Handler.StopCameraFollow(callback,backTable)--

    PomeloCLUA:PbRequest(61,nil,nil,"ReturnMsg",callback,backTable);
end
-- requstMsg:无参
function RPCLUA.wbScene_Handler.GetCastlePos(callback,backTable)--

    PomeloCLUA:PbRequest(62,nil,nil,"vect2",callback,backTable);
end
-- requstMsg:"WsObjId",结构的luatable 、
function RPCLUA.wbScene_Handler.GetBlockInfo(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(63, "WsObjId",requstMsg,"BattleBlockInfo",callback,backTable);
end
-- requstMsg:luatable 依次是"int32",
function RPCLUA.wbScene_Handler.ViewBattleDetail(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">i4", requstMsg);
    PomeloCLUA.pomeloClient:request(64,reqMsg,function (buffer,offset)
                --ans 是 ReturnMsg 结构得 luatable
                local ans=PomeloCLUA:PBDecode("ReturnMsg",buffer,offset);
                callback(backTable,ans);
            end);
end
-- requstMsg:"BattleSyncFrameOps",结构的luatable 、
function RPCLUA.wbScene_Handler.SyncBattleOps(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(65, "BattleSyncFrameOps",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"NextPhaseBattle",结构的luatable 、
function RPCLUA.wbScene_Handler.StartNextPhaseBattle(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(66, "NextPhaseBattle",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"KeyValuePair",结构的luatable 、
function RPCLUA.wbScene_Handler.SetNewbieGuideFlag(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(67, "KeyValuePair",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"SearchPara",结构的luatable 、
function RPCLUA.wbScene_Handler.SearchObject(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(68, "SearchPara",requstMsg,"SearchedObjectList",callback,backTable);
end
-- requstMsg:luatable 依次是"string",
function RPCLUA.wbScene_Handler.FindPlayerbyName(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">s2", requstMsg);
    PomeloCLUA.pomeloClient:request(69,reqMsg,function (buffer,offset)
                --ans 是 SearchedPlayerInfo 结构得 luatable
                local ans=PomeloCLUA:PBDecode("SearchedPlayerInfo",buffer,offset);
                callback(backTable,ans);
            end);
end
RPCLUA.wbScene_Union_Handler={};

-- requstMsg:luatable 依次是"int32",
function RPCLUA.wbScene_Union_Handler.GetUnionList(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">i4", requstMsg);
    PomeloCLUA.pomeloClient:request(70,reqMsg,function (buffer,offset)
                --ans 是 UnionList 结构得 luatable
                local ans=PomeloCLUA:PBDecode("UnionList",buffer,offset);
                callback(backTable,ans);
            end);
end
-- requstMsg:luatable 依次是"int32",
function RPCLUA.wbScene_Union_Handler.GetApplyUnionList(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">i4", requstMsg);
    PomeloCLUA.pomeloClient:request(71,reqMsg,function (buffer,offset)
                --ans 是 UnionList 结构得 luatable
                local ans=PomeloCLUA:PBDecode("UnionList",buffer,offset);
                callback(backTable,ans);
            end);
end
-- requstMsg:"UnionOperateMsg",结构的luatable 、
function RPCLUA.wbScene_Union_Handler.OperateUnion(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(72, "UnionOperateMsg",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"CreateArgs",结构的luatable 、
function RPCLUA.wbScene_Union_Handler.CreateUnion(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(73, "CreateArgs",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"UnionJobMsg",结构的luatable 、
function RPCLUA.wbScene_Union_Handler.UnionJobChg(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(74, "UnionJobMsg",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:无参
function RPCLUA.wbScene_Union_Handler.GetApplylist(callback,backTable)--

    PomeloCLUA:PbRequest(75,nil,nil,"ApplyPlayerList",callback,backTable);
end
-- requstMsg:"SearchArgs",结构的luatable 、
function RPCLUA.wbScene_Union_Handler.SearchUnion(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(76, "SearchArgs",requstMsg,"UnionList",callback,backTable);
end
-- requstMsg:"CreateArgs",结构的luatable 、
function RPCLUA.wbScene_Union_Handler.ChangeUnionSet(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(77, "CreateArgs",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:luatable 依次是"string",
function RPCLUA.wbScene_Union_Handler.ChangeUnionName(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">s2", requstMsg);
    PomeloCLUA.pomeloClient:request(78,reqMsg,function (buffer,offset)
                --ans 是 ReturnMsg 结构得 luatable
                local ans=PomeloCLUA:PBDecode("ReturnMsg",buffer,offset);
                callback(backTable,ans);
            end);
end
-- requstMsg:luatable 依次是"string",
function RPCLUA.wbScene_Union_Handler.ChangeUnionAbbr(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">s2", requstMsg);
    PomeloCLUA.pomeloClient:request(79,reqMsg,function (buffer,offset)
                --ans 是 ReturnMsg 结构得 luatable
                local ans=PomeloCLUA:PBDecode("ReturnMsg",buffer,offset);
                callback(backTable,ans);
            end);
end
-- requstMsg:"WsObjId",结构的luatable 、
function RPCLUA.wbScene_Union_Handler.ChangeUnionBadge(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(80, "WsObjId",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:无参
function RPCLUA.wbScene_Union_Handler.GetUnionMembers(callback,backTable)--

    PomeloCLUA:PbRequest(81,nil,nil,"UnionMembers",callback,backTable);
end
-- requstMsg:无参
function RPCLUA.wbScene_Union_Handler.GetInvitePlayers(callback,backTable)--

    PomeloCLUA:PbRequest(82,nil,nil,"InvitePlayers",callback,backTable);
end
-- requstMsg:"ULongIdList",结构的luatable 、
function RPCLUA.wbScene_Union_Handler.InvitePlayers(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(83, "ULongIdList",requstMsg,"ReturnMsg",callback,backTable);
end
RPCLUA.wbScene_Friend_Handler={};

-- requstMsg:无参
function RPCLUA.wbScene_Friend_Handler.GetFriendList(callback,backTable)--

    PomeloCLUA:PbRequest(84,nil,nil,"FriendList",callback,backTable);
end
-- requstMsg:"PlayerId",结构的luatable 、
function RPCLUA.wbScene_Friend_Handler.ApplyasFriend(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(85, "PlayerId",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"PlayerId",结构的luatable 、
function RPCLUA.wbScene_Friend_Handler.AddasFriend(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(86, "PlayerId",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"PlayerId",结构的luatable 、
function RPCLUA.wbScene_Friend_Handler.DefuseasFriend(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(87, "PlayerId",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"PlayerId",结构的luatable 、
function RPCLUA.wbScene_Friend_Handler.DeleteFriend(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(88, "PlayerId",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"PlayerId",结构的luatable 、
function RPCLUA.wbScene_Friend_Handler.FindPlayer(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(89, "PlayerId",requstMsg,"Friend",callback,backTable);
end
-- requstMsg:luatable 依次是"string",
function RPCLUA.wbScene_Friend_Handler.FindPlayerbyName(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">s2", requstMsg);
    PomeloCLUA.pomeloClient:request(90,reqMsg,function (buffer,offset)
                --ans 是 Friend 结构得 luatable
                local ans=PomeloCLUA:PBDecode("Friend",buffer,offset);
                callback(backTable,ans);
            end);
end
RPCLUA.wbScene_Task_Handler={};

-- requstMsg:"SingleTaskInfo",结构的luatable 、
function RPCLUA.wbScene_Task_Handler.ClickGetReward(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("SingleTaskInfo", requstMsg)
    PomeloCLUA.pomeloClient:request(91,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:luatable 依次是"int32",
function RPCLUA.wbScene_Task_Handler.OpenActiveBox(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">i4", requstMsg);
    PomeloCLUA.pomeloClient:request(92,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:"SingleTaskInfo",结构的luatable 、
function RPCLUA.wbScene_Task_Handler.GMFinishTask(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("SingleTaskInfo", requstMsg)
    PomeloCLUA.pomeloClient:request(93,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
RPCLUA.wbScene_GM_Handler={};

-- requstMsg:"OperateMsg",结构的luatable 、
function RPCLUA.wbScene_GM_Handler.GMOperatePlayers(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(94, "OperateMsg",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"OperateMsg",结构的luatable 、
function RPCLUA.wbScene_GM_Handler.GMMovePlayerCastles(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(95, "OperateMsg",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"OperateMsg",结构的luatable 、
function RPCLUA.wbScene_GM_Handler.MoveCastle(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(96, "OperateMsg",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"OperateMsg",结构的luatable 、
function RPCLUA.wbScene_GM_Handler.CreateRes(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(97, "OperateMsg",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"OperateMsg",结构的luatable 、
function RPCLUA.wbScene_GM_Handler.CreateMutiRes(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(98, "OperateMsg",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"vect2",结构的luatable 、
function RPCLUA.wbScene_GM_Handler.GMTransfer(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(99, "vect2",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"OperateMsg",结构的luatable 、
function RPCLUA.wbScene_GM_Handler.GMAddSolider(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(100, "OperateMsg",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"OperateMsg",结构的luatable 、
function RPCLUA.wbScene_GM_Handler.GMAddLeader(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(101, "OperateMsg",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"OperateMsg",结构的luatable 、
function RPCLUA.wbScene_GM_Handler.GMChangeCollectSpeed(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(102, "OperateMsg",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"PlayerResourceInfo",结构的luatable 、
function RPCLUA.wbScene_GM_Handler.GMSetResource(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(103, "PlayerResourceInfo",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"ItemInfo",结构的luatable 、
function RPCLUA.wbScene_GM_Handler.GMSetItem(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(104, "ItemInfo",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"OperateMsg",结构的luatable 、
function RPCLUA.wbScene_GM_Handler.GMPassBarriers(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("OperateMsg", requstMsg)
    PomeloCLUA.pomeloClient:request(105,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:"GMSendMail",结构的luatable 、
function RPCLUA.wbScene_GM_Handler.GMAddSysMail(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(106, "GMSendMail",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:无参
function RPCLUA.wbScene_GM_Handler.GMGetHeroInfo(callback,backTable)--

    PomeloCLUA:PbRequest(107,nil,nil,"PlayerHeroInfo",callback,backTable);
end
-- requstMsg:"RepeatedInt32",结构的luatable 、
function RPCLUA.wbScene_GM_Handler.GMGetResource(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(108, "RepeatedInt32",requstMsg,"RepeatedInt32",callback,backTable);
end
-- requstMsg:"AutoTrade",结构的luatable 、
function RPCLUA.wbScene_GM_Handler.GMStartAutoTrade(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(109, "AutoTrade",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"GMEquipInfo",结构的luatable 、
function RPCLUA.wbScene_GM_Handler.GMSetEquip(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(110, "GMEquipInfo",requstMsg,"ReturnMsg",callback,backTable);
end
RPCLUA.wbScene_Mail_Handler={};

-- requstMsg:"GetNewerMailTitleReq",结构的luatable 、
function RPCLUA.wbScene_Mail_Handler.GetNewerMailTitle(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(111, "GetNewerMailTitleReq",requstMsg,"GetNewerMailTitleRsp",callback,backTable);
end
-- requstMsg:"GetMailTitleReq",结构的luatable 、
function RPCLUA.wbScene_Mail_Handler.GetMailTitle(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(112, "GetMailTitleReq",requstMsg,"GetMailTitleRsp",callback,backTable);
end
-- requstMsg:"GetMailContentReq",结构的luatable 、
function RPCLUA.wbScene_Mail_Handler.GetMailContent(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(113, "GetMailContentReq",requstMsg,"GetMailContentRsp",callback,backTable);
end
-- requstMsg:"ReadMailReq",结构的luatable 、
function RPCLUA.wbScene_Mail_Handler.ReadMail(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(114, "ReadMailReq",requstMsg,"ReadMailRsp",callback,backTable);
end
-- requstMsg:"RecvMailAwardReq",结构的luatable 、
function RPCLUA.wbScene_Mail_Handler.RecvMailAward(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(115, "RecvMailAwardReq",requstMsg,"RecvMailAwardRsp",callback,backTable);
end
-- requstMsg:"ReadRecvAllMailReq",结构的luatable 、
function RPCLUA.wbScene_Mail_Handler.ReadRecvAllMail(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(116, "ReadRecvAllMailReq",requstMsg,"ReadRecvAllMailRsp",callback,backTable);
end
-- requstMsg:"CollectMailReq",结构的luatable 、
function RPCLUA.wbScene_Mail_Handler.CollectMail(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(117, "CollectMailReq",requstMsg,"CollectMailRsp",callback,backTable);
end
-- requstMsg:"DeleteMailReq",结构的luatable 、
function RPCLUA.wbScene_Mail_Handler.DeleteMail(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(118, "DeleteMailReq",requstMsg,"DeleteMailRsp",callback,backTable);
end
-- requstMsg:"SendMailReq",结构的luatable 、
function RPCLUA.wbScene_Mail_Handler.SendMail(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(119, "SendMailReq",requstMsg,"SendMailRsp",callback,backTable);
end
RPCLUA.wbScene_TradingPort_Handler={};

-- requstMsg:"BuyItem",结构的luatable 、
function RPCLUA.wbScene_TradingPort_Handler.BuyCommodity(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(120, "BuyItem",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"SellItem",结构的luatable 、
function RPCLUA.wbScene_TradingPort_Handler.SellCommodity(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(121, "SellItem",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"tradingPortId",结构的luatable 、
function RPCLUA.wbScene_TradingPort_Handler.GetPortInfo(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(122, "tradingPortId",requstMsg,"PortInfo",callback,backTable);
end
-- requstMsg:无参
function RPCLUA.wbScene_TradingPort_Handler.GetTradeMainInfo(callback,backTable)--

    PomeloCLUA:PbRequest(123,nil,nil,"TradingMainInfo",callback,backTable);
end
-- requstMsg:无参
function RPCLUA.wbScene_TradingPort_Handler.GetTradeMarketList(callback,backTable)--

    PomeloCLUA:PbRequest(124,nil,nil,"TradingMarket",callback,backTable);
end
-- requstMsg:无参
function RPCLUA.wbScene_TradingPort_Handler.GetTradeRouteInfo(callback,backTable)--

    PomeloCLUA:PbRequest(125,nil,nil,"TradeRouteInfo",callback,backTable);
end
-- requstMsg:"AutoTrade",结构的luatable 、
function RPCLUA.wbScene_TradingPort_Handler.StartAutoTrade(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(126, "AutoTrade",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:无参
function RPCLUA.wbScene_TradingPort_Handler.StopAutoTrade(callback,backTable)--

    PomeloCLUA:PbRequest(127,nil,nil,"ReturnMsg",callback,backTable);
end
RPCLUA.wbScene_Expedition_Handler={};

-- requstMsg:"StartExpedition",结构的luatable 、
function RPCLUA.wbScene_Expedition_Handler.StartBattle(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(128, "StartExpedition",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"TroopListReqPara",结构的luatable 、
function RPCLUA.wbScene_Expedition_Handler.GetExpeditionTroops(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(129, "TroopListReqPara",requstMsg,"ConfigTroopList",callback,backTable);
end
-- requstMsg:"BattleResult",结构的luatable 、
function RPCLUA.wbScene_Expedition_Handler.EndBattle(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(130, "BattleResult",requstMsg,"ReturnMsg",callback,backTable);
end
RPCLUA.wbScene_Transfer_Handler={};

-- requstMsg:"PlayerTransferToDstSvrReq",结构的luatable 、
function RPCLUA.wbScene_Transfer_Handler.TranferToDstServer(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(131, "PlayerTransferToDstSvrReq",requstMsg,"PlayerTransferToDstSvrRsp",callback,backTable);
end
RPCLUA.wbScene_PlayerHero_Handler={};

-- requstMsg:"UseItemsToHero",结构的luatable 、
function RPCLUA.wbScene_PlayerHero_Handler.AddHeroExpByItems(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("UseItemsToHero", requstMsg)
    PomeloCLUA.pomeloClient:request(132,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:luatable 依次是"int32",
function RPCLUA.wbScene_PlayerHero_Handler.IncHeroStarStageByItem(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">i4", requstMsg);
    PomeloCLUA.pomeloClient:request(133,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:无参
function RPCLUA.wbScene_PlayerHero_Handler.GetMainFightHeroes(callback,backTable)--

    PomeloCLUA:PbRequest(134,nil,nil,"ConfigTroop",callback,backTable);
end
-- requstMsg:"ConfigTroop",结构的luatable 、
function RPCLUA.wbScene_PlayerHero_Handler.SetMainFightHeroes(requstMsg,callback,backTable)--
    local  reqMsg = PomeloCLUA:PBEncode("ConfigTroop", requstMsg)
    PomeloCLUA.pomeloClient:request(135,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:luatable 依次是"int32",
function RPCLUA.wbScene_PlayerHero_Handler.IncHeroSkillLevelByItem(requstMsg,callback,backTable)--
   local reqMsg = PomeloCLUA:BuiltInEncode(">i4", requstMsg);
    PomeloCLUA.pomeloClient:request(136,reqMsg,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
RPCLUA.wbScene_Bookmark_Handler={};

-- requstMsg:无参
function RPCLUA.wbScene_Bookmark_Handler.GetBookmarkList(callback,backTable)--

    PomeloCLUA:PbRequest(137,nil,nil,"BookmarkList",callback,backTable);
end
-- requstMsg:"Bookmark",结构的luatable 、
function RPCLUA.wbScene_Bookmark_Handler.AddBookmark(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(138, "Bookmark",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"Bookmark",结构的luatable 、
function RPCLUA.wbScene_Bookmark_Handler.ChangeBookmark(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(139, "Bookmark",requstMsg,"ReturnMsg",callback,backTable);
end
-- requstMsg:"Bookmark",结构的luatable 、
function RPCLUA.wbScene_Bookmark_Handler.DeleteBookmark(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(140, "Bookmark",requstMsg,"ReturnMsg",callback,backTable);
end
RPCLUA.wbScene_Equip_Handler={};

-- requstMsg:无参
function RPCLUA.wbScene_Equip_Handler.GetHeroEquipList(callback,backTable)--

    PomeloCLUA:PbRequest(141,nil,nil,"HeroEquipList",callback,backTable);
end
-- requstMsg:无参
function RPCLUA.wbScene_Equip_Handler.SetHeroEquip(callback,backTable)--

    PomeloCLUA.pomeloClient:request(142,nil,function (buffer,offset)
                --ans 是 int32
                local ans=PomeloCLUA:BuiltInDecode(">i4",buffer, offset)
                callback(backTable,ans);
            end);
end
-- requstMsg:"GetStuffsReq",结构的luatable 、
function RPCLUA.wbScene_Equip_Handler.GetStuffs(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(143, "GetStuffsReq",requstMsg,"GetStuffsRsp",callback,backTable);
end
-- requstMsg:"GetAllEquipReq",结构的luatable 、
function RPCLUA.wbScene_Equip_Handler.GetAllEquip(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(144, "GetAllEquipReq",requstMsg,"GetAllEquipRsp",callback,backTable);
end
-- requstMsg:"SynthetizeStuffReq",结构的luatable 、
function RPCLUA.wbScene_Equip_Handler.SynthetizeStuff(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(145, "SynthetizeStuffReq",requstMsg,"SynthetizeStuffRsp",callback,backTable);
end
-- requstMsg:"ComposeEquipReq",结构的luatable 、
function RPCLUA.wbScene_Equip_Handler.ComposeEquip(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(146, "ComposeEquipReq",requstMsg,"ComposeEquipRsp",callback,backTable);
end
-- requstMsg:"DeComposeEquipReq",结构的luatable 、
function RPCLUA.wbScene_Equip_Handler.DecomposeEquip(requstMsg,callback,backTable)--

    PomeloCLUA:PbRequest(147, "DeComposeEquipReq",requstMsg,"DeComposeEquipRsp",callback,backTable);
end
return RPCLUA;
