// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: msg_equip.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SLG {

  /// <summary>Holder for reflection information generated from msg_equip.proto</summary>
  public static partial class MsgEquipReflection {

    #region Descriptor
    /// <summary>File descriptor for msg_equip.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MsgEquipReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9tc2dfZXF1aXAucHJvdG8SA1NMRyJQCglIZXJvRXF1aXASDwoHZXF1aXBJ",
            "ZBgBIAEoBRIRCgllcXVpcFR5cGUYAiABKAUSDwoHYWZmaXhJZBgDIAEoBRIO",
            "CgZoZXJvSWQYBCABKAUiMQoLR01FcXVpcEluZm8SEQoJZXF1aXBUeXBlGAEg",
            "ASgFEg8KB2FmZml4SWQYAiABKAUiLAoFU3R1ZmYSDwoHc3R1ZmZJZBgBIAEo",
            "DRISCgpzdHVmZkNvdW50GAIgASgNIiYKCVN0dWZmTGlzdBIZCgVzdHVmZhgB",
            "IAMoCzIKLlNMRy5TdHVmZiJCChJTeW50aGV0aXplU3R1ZmZSZXESGQoFc3R1",
            "ZmYYASADKAsyCi5TTEcuU3R1ZmYSEQoJdGFyZ2V0X2lkGAIgASgNIj8KElN5",
            "bnRoZXRpemVTdHVmZlJzcBIOCgZyZXN1bHQYASABKAUSGQoFc3R1ZmYYAiAD",
            "KAsyCi5TTEcuU3R1ZmYiMQoNSGVyb0VxdWlwTGlzdBIgCghoZXJvTGlzdBgB",
            "IAMoCzIOLlNMRy5IZXJvRXF1aXAiSQoPU2V0SGVyb0VxdWlwUmVxEg4KBmhl",
            "cm9JZBgBIAEoBRISCgpvbGRFcXVpcElkGAIgASgFEhIKCm5ld0VxdWlwSWQY",
            "AyABKAUiDgoMR2V0U3R1ZmZzUmVxIikKDEdldFN0dWZmc1JzcBIZCgVzdHVm",
            "ZhgBIAMoCzIKLlNMRy5TdHVmZiIQCg5HZXRBbGxFcXVpcFJlcSJKCg5HZXRB",
            "bGxFcXVpcFJzcBIdCgVlcXVpcBgBIAMoCzIOLlNMRy5IZXJvRXF1aXASGQoF",
            "c3R1ZmYYAiADKAsyCi5TTEcuU3R1ZmYiJAoPQ29tcG9zZUVxdWlwUmVxEhEK",
            "CWVxdWlwVHlwZRgBIAEoBSJbCg9Db21wb3NlRXF1aXBSc3ASDgoGcmVzdWx0",
            "GAEgASgFEh0KBWVxdWlwGAIgASgLMg4uU0xHLkhlcm9FcXVpcBIZCgVzdHVm",
            "ZhgDIAMoCzIKLlNMRy5TdHVmZiIyChFEZUNvbXBvc2VFcXVpcFJlcRIdCgVl",
            "cXVpcBgBIAEoCzIOLlNMRy5IZXJvRXF1aXAiPgoRRGVDb21wb3NlRXF1aXBS",
            "c3ASDgoGcmVzdWx0GAEgASgFEhkKBXN0dWZmGAIgAygLMgouU0xHLlN0dWZm",
            "IkgKE0NvbXBvc2VNYW55U3R1ZmZSZXESDgoGcmVzdWx0GAEgASgFEiEKCXN0",
            "dWZmTGlzdBgCIAMoCzIOLlNMRy5TdHVmZkxpc3QiQAoTQ29tcG9zZU1hbnlT",
            "dHVmZlJzcBIOCgZyZXN1bHQYASABKAUSGQoFc3R1ZmYYAiADKAsyCi5TTEcu",
            "U3R1ZmZiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.HeroEquip), global::SLG.HeroEquip.Parser, new[]{ "EquipId", "EquipType", "AffixId", "HeroId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.GMEquipInfo), global::SLG.GMEquipInfo.Parser, new[]{ "EquipType", "AffixId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.Stuff), global::SLG.Stuff.Parser, new[]{ "StuffId", "StuffCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.StuffList), global::SLG.StuffList.Parser, new[]{ "Stuff" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.SynthetizeStuffReq), global::SLG.SynthetizeStuffReq.Parser, new[]{ "Stuff", "TargetId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.SynthetizeStuffRsp), global::SLG.SynthetizeStuffRsp.Parser, new[]{ "Result", "Stuff" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.HeroEquipList), global::SLG.HeroEquipList.Parser, new[]{ "HeroList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.SetHeroEquipReq), global::SLG.SetHeroEquipReq.Parser, new[]{ "HeroId", "OldEquipId", "NewEquipId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.GetStuffsReq), global::SLG.GetStuffsReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.GetStuffsRsp), global::SLG.GetStuffsRsp.Parser, new[]{ "Stuff" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.GetAllEquipReq), global::SLG.GetAllEquipReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.GetAllEquipRsp), global::SLG.GetAllEquipRsp.Parser, new[]{ "Equip", "Stuff" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.ComposeEquipReq), global::SLG.ComposeEquipReq.Parser, new[]{ "EquipType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.ComposeEquipRsp), global::SLG.ComposeEquipRsp.Parser, new[]{ "Result", "Equip", "Stuff" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.DeComposeEquipReq), global::SLG.DeComposeEquipReq.Parser, new[]{ "Equip" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.DeComposeEquipRsp), global::SLG.DeComposeEquipRsp.Parser, new[]{ "Result", "Stuff" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.ComposeManyStuffReq), global::SLG.ComposeManyStuffReq.Parser, new[]{ "Result", "StuffList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.ComposeManyStuffRsp), global::SLG.ComposeManyStuffRsp.Parser, new[]{ "Result", "Stuff" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class HeroEquip : pb::IMessage<HeroEquip> {
    private static readonly pb::MessageParser<HeroEquip> _parser = new pb::MessageParser<HeroEquip>(() => new HeroEquip());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroEquip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgEquipReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquip(HeroEquip other) : this() {
      equipId_ = other.equipId_;
      equipType_ = other.equipType_;
      affixId_ = other.affixId_;
      heroId_ = other.heroId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquip Clone() {
      return new HeroEquip(this);
    }

    /// <summary>Field number for the "equipId" field.</summary>
    public const int EquipIdFieldNumber = 1;
    private int equipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EquipId {
      get { return equipId_; }
      set {
        equipId_ = value;
      }
    }

    /// <summary>Field number for the "equipType" field.</summary>
    public const int EquipTypeFieldNumber = 2;
    private int equipType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EquipType {
      get { return equipType_; }
      set {
        equipType_ = value;
      }
    }

    /// <summary>Field number for the "affixId" field.</summary>
    public const int AffixIdFieldNumber = 3;
    private int affixId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AffixId {
      get { return affixId_; }
      set {
        affixId_ = value;
      }
    }

    /// <summary>Field number for the "heroId" field.</summary>
    public const int HeroIdFieldNumber = 4;
    private int heroId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeroId {
      get { return heroId_; }
      set {
        heroId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroEquip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroEquip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EquipId != other.EquipId) return false;
      if (EquipType != other.EquipType) return false;
      if (AffixId != other.AffixId) return false;
      if (HeroId != other.HeroId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EquipId != 0) hash ^= EquipId.GetHashCode();
      if (EquipType != 0) hash ^= EquipType.GetHashCode();
      if (AffixId != 0) hash ^= AffixId.GetHashCode();
      if (HeroId != 0) hash ^= HeroId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EquipId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EquipId);
      }
      if (EquipType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EquipType);
      }
      if (AffixId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AffixId);
      }
      if (HeroId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(HeroId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EquipId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EquipId);
      }
      if (EquipType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EquipType);
      }
      if (AffixId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AffixId);
      }
      if (HeroId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroEquip other) {
      if (other == null) {
        return;
      }
      if (other.EquipId != 0) {
        EquipId = other.EquipId;
      }
      if (other.EquipType != 0) {
        EquipType = other.EquipType;
      }
      if (other.AffixId != 0) {
        AffixId = other.AffixId;
      }
      if (other.HeroId != 0) {
        HeroId = other.HeroId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EquipId = input.ReadInt32();
            break;
          }
          case 16: {
            EquipType = input.ReadInt32();
            break;
          }
          case 24: {
            AffixId = input.ReadInt32();
            break;
          }
          case 32: {
            HeroId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GMEquipInfo : pb::IMessage<GMEquipInfo> {
    private static readonly pb::MessageParser<GMEquipInfo> _parser = new pb::MessageParser<GMEquipInfo>(() => new GMEquipInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GMEquipInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgEquipReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GMEquipInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GMEquipInfo(GMEquipInfo other) : this() {
      equipType_ = other.equipType_;
      affixId_ = other.affixId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GMEquipInfo Clone() {
      return new GMEquipInfo(this);
    }

    /// <summary>Field number for the "equipType" field.</summary>
    public const int EquipTypeFieldNumber = 1;
    private int equipType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EquipType {
      get { return equipType_; }
      set {
        equipType_ = value;
      }
    }

    /// <summary>Field number for the "affixId" field.</summary>
    public const int AffixIdFieldNumber = 2;
    private int affixId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AffixId {
      get { return affixId_; }
      set {
        affixId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GMEquipInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GMEquipInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EquipType != other.EquipType) return false;
      if (AffixId != other.AffixId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EquipType != 0) hash ^= EquipType.GetHashCode();
      if (AffixId != 0) hash ^= AffixId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EquipType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EquipType);
      }
      if (AffixId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AffixId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EquipType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EquipType);
      }
      if (AffixId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AffixId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GMEquipInfo other) {
      if (other == null) {
        return;
      }
      if (other.EquipType != 0) {
        EquipType = other.EquipType;
      }
      if (other.AffixId != 0) {
        AffixId = other.AffixId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EquipType = input.ReadInt32();
            break;
          }
          case 16: {
            AffixId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 图纸+材料(含碎片)
  /// </summary>
  public sealed partial class Stuff : pb::IMessage<Stuff> {
    private static readonly pb::MessageParser<Stuff> _parser = new pb::MessageParser<Stuff>(() => new Stuff());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Stuff> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgEquipReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stuff() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stuff(Stuff other) : this() {
      stuffId_ = other.stuffId_;
      stuffCount_ = other.stuffCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stuff Clone() {
      return new Stuff(this);
    }

    /// <summary>Field number for the "stuffId" field.</summary>
    public const int StuffIdFieldNumber = 1;
    private uint stuffId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StuffId {
      get { return stuffId_; }
      set {
        stuffId_ = value;
      }
    }

    /// <summary>Field number for the "stuffCount" field.</summary>
    public const int StuffCountFieldNumber = 2;
    private uint stuffCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StuffCount {
      get { return stuffCount_; }
      set {
        stuffCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Stuff);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Stuff other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StuffId != other.StuffId) return false;
      if (StuffCount != other.StuffCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StuffId != 0) hash ^= StuffId.GetHashCode();
      if (StuffCount != 0) hash ^= StuffCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StuffId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StuffId);
      }
      if (StuffCount != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(StuffCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StuffId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StuffId);
      }
      if (StuffCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StuffCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Stuff other) {
      if (other == null) {
        return;
      }
      if (other.StuffId != 0) {
        StuffId = other.StuffId;
      }
      if (other.StuffCount != 0) {
        StuffCount = other.StuffCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StuffId = input.ReadUInt32();
            break;
          }
          case 16: {
            StuffCount = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StuffList : pb::IMessage<StuffList> {
    private static readonly pb::MessageParser<StuffList> _parser = new pb::MessageParser<StuffList>(() => new StuffList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StuffList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgEquipReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StuffList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StuffList(StuffList other) : this() {
      stuff_ = other.stuff_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StuffList Clone() {
      return new StuffList(this);
    }

    /// <summary>Field number for the "stuff" field.</summary>
    public const int StuffFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SLG.Stuff> _repeated_stuff_codec
        = pb::FieldCodec.ForMessage(10, global::SLG.Stuff.Parser);
    private readonly pbc::RepeatedField<global::SLG.Stuff> stuff_ = new pbc::RepeatedField<global::SLG.Stuff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SLG.Stuff> Stuff {
      get { return stuff_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StuffList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StuffList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stuff_.Equals(other.stuff_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stuff_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      stuff_.WriteTo(output, _repeated_stuff_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += stuff_.CalculateSize(_repeated_stuff_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StuffList other) {
      if (other == null) {
        return;
      }
      stuff_.Add(other.stuff_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stuff_.AddEntriesFrom(input, _repeated_stuff_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SynthetizeStuffReq : pb::IMessage<SynthetizeStuffReq> {
    private static readonly pb::MessageParser<SynthetizeStuffReq> _parser = new pb::MessageParser<SynthetizeStuffReq>(() => new SynthetizeStuffReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SynthetizeStuffReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgEquipReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SynthetizeStuffReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SynthetizeStuffReq(SynthetizeStuffReq other) : this() {
      stuff_ = other.stuff_.Clone();
      targetId_ = other.targetId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SynthetizeStuffReq Clone() {
      return new SynthetizeStuffReq(this);
    }

    /// <summary>Field number for the "stuff" field.</summary>
    public const int StuffFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SLG.Stuff> _repeated_stuff_codec
        = pb::FieldCodec.ForMessage(10, global::SLG.Stuff.Parser);
    private readonly pbc::RepeatedField<global::SLG.Stuff> stuff_ = new pbc::RepeatedField<global::SLG.Stuff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SLG.Stuff> Stuff {
      get { return stuff_; }
    }

    /// <summary>Field number for the "target_id" field.</summary>
    public const int TargetIdFieldNumber = 2;
    private uint targetId_;
    /// <summary>
    /// 目标材料
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SynthetizeStuffReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SynthetizeStuffReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stuff_.Equals(other.stuff_)) return false;
      if (TargetId != other.TargetId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stuff_.GetHashCode();
      if (TargetId != 0) hash ^= TargetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      stuff_.WriteTo(output, _repeated_stuff_codec);
      if (TargetId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TargetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += stuff_.CalculateSize(_repeated_stuff_codec);
      if (TargetId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SynthetizeStuffReq other) {
      if (other == null) {
        return;
      }
      stuff_.Add(other.stuff_);
      if (other.TargetId != 0) {
        TargetId = other.TargetId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stuff_.AddEntriesFrom(input, _repeated_stuff_codec);
            break;
          }
          case 16: {
            TargetId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SynthetizeStuffRsp : pb::IMessage<SynthetizeStuffRsp> {
    private static readonly pb::MessageParser<SynthetizeStuffRsp> _parser = new pb::MessageParser<SynthetizeStuffRsp>(() => new SynthetizeStuffRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SynthetizeStuffRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgEquipReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SynthetizeStuffRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SynthetizeStuffRsp(SynthetizeStuffRsp other) : this() {
      result_ = other.result_;
      stuff_ = other.stuff_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SynthetizeStuffRsp Clone() {
      return new SynthetizeStuffRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    /// <summary>
    ///suc:1  err: -1:unknown -2:id -3:cnt
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "stuff" field.</summary>
    public const int StuffFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SLG.Stuff> _repeated_stuff_codec
        = pb::FieldCodec.ForMessage(18, global::SLG.Stuff.Parser);
    private readonly pbc::RepeatedField<global::SLG.Stuff> stuff_ = new pbc::RepeatedField<global::SLG.Stuff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SLG.Stuff> Stuff {
      get { return stuff_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SynthetizeStuffRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SynthetizeStuffRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!stuff_.Equals(other.stuff_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= stuff_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      stuff_.WriteTo(output, _repeated_stuff_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      size += stuff_.CalculateSize(_repeated_stuff_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SynthetizeStuffRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      stuff_.Add(other.stuff_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            stuff_.AddEntriesFrom(input, _repeated_stuff_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeroEquipList : pb::IMessage<HeroEquipList> {
    private static readonly pb::MessageParser<HeroEquipList> _parser = new pb::MessageParser<HeroEquipList>(() => new HeroEquipList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroEquipList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgEquipReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipList(HeroEquipList other) : this() {
      heroList_ = other.heroList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroEquipList Clone() {
      return new HeroEquipList(this);
    }

    /// <summary>Field number for the "heroList" field.</summary>
    public const int HeroListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SLG.HeroEquip> _repeated_heroList_codec
        = pb::FieldCodec.ForMessage(10, global::SLG.HeroEquip.Parser);
    private readonly pbc::RepeatedField<global::SLG.HeroEquip> heroList_ = new pbc::RepeatedField<global::SLG.HeroEquip>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SLG.HeroEquip> HeroList {
      get { return heroList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroEquipList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroEquipList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!heroList_.Equals(other.heroList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= heroList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      heroList_.WriteTo(output, _repeated_heroList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += heroList_.CalculateSize(_repeated_heroList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroEquipList other) {
      if (other == null) {
        return;
      }
      heroList_.Add(other.heroList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            heroList_.AddEntriesFrom(input, _repeated_heroList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetHeroEquipReq : pb::IMessage<SetHeroEquipReq> {
    private static readonly pb::MessageParser<SetHeroEquipReq> _parser = new pb::MessageParser<SetHeroEquipReq>(() => new SetHeroEquipReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetHeroEquipReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgEquipReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetHeroEquipReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetHeroEquipReq(SetHeroEquipReq other) : this() {
      heroId_ = other.heroId_;
      oldEquipId_ = other.oldEquipId_;
      newEquipId_ = other.newEquipId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetHeroEquipReq Clone() {
      return new SetHeroEquipReq(this);
    }

    /// <summary>Field number for the "heroId" field.</summary>
    public const int HeroIdFieldNumber = 1;
    private int heroId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeroId {
      get { return heroId_; }
      set {
        heroId_ = value;
      }
    }

    /// <summary>Field number for the "oldEquipId" field.</summary>
    public const int OldEquipIdFieldNumber = 2;
    private int oldEquipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OldEquipId {
      get { return oldEquipId_; }
      set {
        oldEquipId_ = value;
      }
    }

    /// <summary>Field number for the "newEquipId" field.</summary>
    public const int NewEquipIdFieldNumber = 3;
    private int newEquipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NewEquipId {
      get { return newEquipId_; }
      set {
        newEquipId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetHeroEquipReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetHeroEquipReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroId != other.HeroId) return false;
      if (OldEquipId != other.OldEquipId) return false;
      if (NewEquipId != other.NewEquipId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroId != 0) hash ^= HeroId.GetHashCode();
      if (OldEquipId != 0) hash ^= OldEquipId.GetHashCode();
      if (NewEquipId != 0) hash ^= NewEquipId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeroId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(HeroId);
      }
      if (OldEquipId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(OldEquipId);
      }
      if (NewEquipId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NewEquipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeroId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroId);
      }
      if (OldEquipId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OldEquipId);
      }
      if (NewEquipId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewEquipId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetHeroEquipReq other) {
      if (other == null) {
        return;
      }
      if (other.HeroId != 0) {
        HeroId = other.HeroId;
      }
      if (other.OldEquipId != 0) {
        OldEquipId = other.OldEquipId;
      }
      if (other.NewEquipId != 0) {
        NewEquipId = other.NewEquipId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HeroId = input.ReadInt32();
            break;
          }
          case 16: {
            OldEquipId = input.ReadInt32();
            break;
          }
          case 24: {
            NewEquipId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetStuffsReq : pb::IMessage<GetStuffsReq> {
    private static readonly pb::MessageParser<GetStuffsReq> _parser = new pb::MessageParser<GetStuffsReq>(() => new GetStuffsReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStuffsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgEquipReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStuffsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStuffsReq(GetStuffsReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStuffsReq Clone() {
      return new GetStuffsReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStuffsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStuffsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStuffsReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetStuffsRsp : pb::IMessage<GetStuffsRsp> {
    private static readonly pb::MessageParser<GetStuffsRsp> _parser = new pb::MessageParser<GetStuffsRsp>(() => new GetStuffsRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStuffsRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgEquipReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStuffsRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStuffsRsp(GetStuffsRsp other) : this() {
      stuff_ = other.stuff_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStuffsRsp Clone() {
      return new GetStuffsRsp(this);
    }

    /// <summary>Field number for the "stuff" field.</summary>
    public const int StuffFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SLG.Stuff> _repeated_stuff_codec
        = pb::FieldCodec.ForMessage(10, global::SLG.Stuff.Parser);
    private readonly pbc::RepeatedField<global::SLG.Stuff> stuff_ = new pbc::RepeatedField<global::SLG.Stuff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SLG.Stuff> Stuff {
      get { return stuff_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStuffsRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStuffsRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stuff_.Equals(other.stuff_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stuff_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      stuff_.WriteTo(output, _repeated_stuff_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += stuff_.CalculateSize(_repeated_stuff_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStuffsRsp other) {
      if (other == null) {
        return;
      }
      stuff_.Add(other.stuff_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stuff_.AddEntriesFrom(input, _repeated_stuff_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAllEquipReq : pb::IMessage<GetAllEquipReq> {
    private static readonly pb::MessageParser<GetAllEquipReq> _parser = new pb::MessageParser<GetAllEquipReq>(() => new GetAllEquipReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllEquipReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgEquipReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllEquipReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllEquipReq(GetAllEquipReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllEquipReq Clone() {
      return new GetAllEquipReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllEquipReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllEquipReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllEquipReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetAllEquipRsp : pb::IMessage<GetAllEquipRsp> {
    private static readonly pb::MessageParser<GetAllEquipRsp> _parser = new pb::MessageParser<GetAllEquipRsp>(() => new GetAllEquipRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllEquipRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgEquipReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllEquipRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllEquipRsp(GetAllEquipRsp other) : this() {
      equip_ = other.equip_.Clone();
      stuff_ = other.stuff_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllEquipRsp Clone() {
      return new GetAllEquipRsp(this);
    }

    /// <summary>Field number for the "equip" field.</summary>
    public const int EquipFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SLG.HeroEquip> _repeated_equip_codec
        = pb::FieldCodec.ForMessage(10, global::SLG.HeroEquip.Parser);
    private readonly pbc::RepeatedField<global::SLG.HeroEquip> equip_ = new pbc::RepeatedField<global::SLG.HeroEquip>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SLG.HeroEquip> Equip {
      get { return equip_; }
    }

    /// <summary>Field number for the "stuff" field.</summary>
    public const int StuffFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SLG.Stuff> _repeated_stuff_codec
        = pb::FieldCodec.ForMessage(18, global::SLG.Stuff.Parser);
    private readonly pbc::RepeatedField<global::SLG.Stuff> stuff_ = new pbc::RepeatedField<global::SLG.Stuff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SLG.Stuff> Stuff {
      get { return stuff_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllEquipRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllEquipRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!equip_.Equals(other.equip_)) return false;
      if(!stuff_.Equals(other.stuff_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= equip_.GetHashCode();
      hash ^= stuff_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      equip_.WriteTo(output, _repeated_equip_codec);
      stuff_.WriteTo(output, _repeated_stuff_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += equip_.CalculateSize(_repeated_equip_codec);
      size += stuff_.CalculateSize(_repeated_stuff_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllEquipRsp other) {
      if (other == null) {
        return;
      }
      equip_.Add(other.equip_);
      stuff_.Add(other.stuff_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            equip_.AddEntriesFrom(input, _repeated_equip_codec);
            break;
          }
          case 18: {
            stuff_.AddEntriesFrom(input, _repeated_stuff_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ComposeEquipReq : pb::IMessage<ComposeEquipReq> {
    private static readonly pb::MessageParser<ComposeEquipReq> _parser = new pb::MessageParser<ComposeEquipReq>(() => new ComposeEquipReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComposeEquipReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgEquipReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComposeEquipReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComposeEquipReq(ComposeEquipReq other) : this() {
      equipType_ = other.equipType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComposeEquipReq Clone() {
      return new ComposeEquipReq(this);
    }

    /// <summary>Field number for the "equipType" field.</summary>
    public const int EquipTypeFieldNumber = 1;
    private int equipType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EquipType {
      get { return equipType_; }
      set {
        equipType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComposeEquipReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComposeEquipReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EquipType != other.EquipType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EquipType != 0) hash ^= EquipType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EquipType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EquipType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EquipType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EquipType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComposeEquipReq other) {
      if (other == null) {
        return;
      }
      if (other.EquipType != 0) {
        EquipType = other.EquipType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EquipType = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ComposeEquipRsp : pb::IMessage<ComposeEquipRsp> {
    private static readonly pb::MessageParser<ComposeEquipRsp> _parser = new pb::MessageParser<ComposeEquipRsp>(() => new ComposeEquipRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComposeEquipRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgEquipReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComposeEquipRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComposeEquipRsp(ComposeEquipRsp other) : this() {
      result_ = other.result_;
      equip_ = other.equip_ != null ? other.equip_.Clone() : null;
      stuff_ = other.stuff_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComposeEquipRsp Clone() {
      return new ComposeEquipRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    /// <summary>
    ///suc:1  err: -1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "equip" field.</summary>
    public const int EquipFieldNumber = 2;
    private global::SLG.HeroEquip equip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SLG.HeroEquip Equip {
      get { return equip_; }
      set {
        equip_ = value;
      }
    }

    /// <summary>Field number for the "stuff" field.</summary>
    public const int StuffFieldNumber = 3;
    private static readonly pb::FieldCodec<global::SLG.Stuff> _repeated_stuff_codec
        = pb::FieldCodec.ForMessage(26, global::SLG.Stuff.Parser);
    private readonly pbc::RepeatedField<global::SLG.Stuff> stuff_ = new pbc::RepeatedField<global::SLG.Stuff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SLG.Stuff> Stuff {
      get { return stuff_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComposeEquipRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComposeEquipRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(Equip, other.Equip)) return false;
      if(!stuff_.Equals(other.stuff_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (equip_ != null) hash ^= Equip.GetHashCode();
      hash ^= stuff_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (equip_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Equip);
      }
      stuff_.WriteTo(output, _repeated_stuff_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (equip_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Equip);
      }
      size += stuff_.CalculateSize(_repeated_stuff_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComposeEquipRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.equip_ != null) {
        if (equip_ == null) {
          Equip = new global::SLG.HeroEquip();
        }
        Equip.MergeFrom(other.Equip);
      }
      stuff_.Add(other.stuff_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            if (equip_ == null) {
              Equip = new global::SLG.HeroEquip();
            }
            input.ReadMessage(Equip);
            break;
          }
          case 26: {
            stuff_.AddEntriesFrom(input, _repeated_stuff_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeComposeEquipReq : pb::IMessage<DeComposeEquipReq> {
    private static readonly pb::MessageParser<DeComposeEquipReq> _parser = new pb::MessageParser<DeComposeEquipReq>(() => new DeComposeEquipReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeComposeEquipReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgEquipReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeComposeEquipReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeComposeEquipReq(DeComposeEquipReq other) : this() {
      equip_ = other.equip_ != null ? other.equip_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeComposeEquipReq Clone() {
      return new DeComposeEquipReq(this);
    }

    /// <summary>Field number for the "equip" field.</summary>
    public const int EquipFieldNumber = 1;
    private global::SLG.HeroEquip equip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SLG.HeroEquip Equip {
      get { return equip_; }
      set {
        equip_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeComposeEquipReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeComposeEquipReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Equip, other.Equip)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (equip_ != null) hash ^= Equip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (equip_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Equip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (equip_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Equip);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeComposeEquipReq other) {
      if (other == null) {
        return;
      }
      if (other.equip_ != null) {
        if (equip_ == null) {
          Equip = new global::SLG.HeroEquip();
        }
        Equip.MergeFrom(other.Equip);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (equip_ == null) {
              Equip = new global::SLG.HeroEquip();
            }
            input.ReadMessage(Equip);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeComposeEquipRsp : pb::IMessage<DeComposeEquipRsp> {
    private static readonly pb::MessageParser<DeComposeEquipRsp> _parser = new pb::MessageParser<DeComposeEquipRsp>(() => new DeComposeEquipRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeComposeEquipRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgEquipReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeComposeEquipRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeComposeEquipRsp(DeComposeEquipRsp other) : this() {
      result_ = other.result_;
      stuff_ = other.stuff_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeComposeEquipRsp Clone() {
      return new DeComposeEquipRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    /// <summary>
    ///suc:1  err: -1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "stuff" field.</summary>
    public const int StuffFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SLG.Stuff> _repeated_stuff_codec
        = pb::FieldCodec.ForMessage(18, global::SLG.Stuff.Parser);
    private readonly pbc::RepeatedField<global::SLG.Stuff> stuff_ = new pbc::RepeatedField<global::SLG.Stuff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SLG.Stuff> Stuff {
      get { return stuff_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeComposeEquipRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeComposeEquipRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!stuff_.Equals(other.stuff_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= stuff_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      stuff_.WriteTo(output, _repeated_stuff_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      size += stuff_.CalculateSize(_repeated_stuff_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeComposeEquipRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      stuff_.Add(other.stuff_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            stuff_.AddEntriesFrom(input, _repeated_stuff_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ComposeManyStuffReq : pb::IMessage<ComposeManyStuffReq> {
    private static readonly pb::MessageParser<ComposeManyStuffReq> _parser = new pb::MessageParser<ComposeManyStuffReq>(() => new ComposeManyStuffReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComposeManyStuffReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgEquipReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComposeManyStuffReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComposeManyStuffReq(ComposeManyStuffReq other) : this() {
      result_ = other.result_;
      stuffList_ = other.stuffList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComposeManyStuffReq Clone() {
      return new ComposeManyStuffReq(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    /// <summary>
    ///suc:1  err: -1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "stuffList" field.</summary>
    public const int StuffListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SLG.StuffList> _repeated_stuffList_codec
        = pb::FieldCodec.ForMessage(18, global::SLG.StuffList.Parser);
    private readonly pbc::RepeatedField<global::SLG.StuffList> stuffList_ = new pbc::RepeatedField<global::SLG.StuffList>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SLG.StuffList> StuffList {
      get { return stuffList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComposeManyStuffReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComposeManyStuffReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!stuffList_.Equals(other.stuffList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= stuffList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      stuffList_.WriteTo(output, _repeated_stuffList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      size += stuffList_.CalculateSize(_repeated_stuffList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComposeManyStuffReq other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      stuffList_.Add(other.stuffList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            stuffList_.AddEntriesFrom(input, _repeated_stuffList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ComposeManyStuffRsp : pb::IMessage<ComposeManyStuffRsp> {
    private static readonly pb::MessageParser<ComposeManyStuffRsp> _parser = new pb::MessageParser<ComposeManyStuffRsp>(() => new ComposeManyStuffRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComposeManyStuffRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgEquipReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComposeManyStuffRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComposeManyStuffRsp(ComposeManyStuffRsp other) : this() {
      result_ = other.result_;
      stuff_ = other.stuff_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComposeManyStuffRsp Clone() {
      return new ComposeManyStuffRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    /// <summary>
    ///suc:1  err: -1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "stuff" field.</summary>
    public const int StuffFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SLG.Stuff> _repeated_stuff_codec
        = pb::FieldCodec.ForMessage(18, global::SLG.Stuff.Parser);
    private readonly pbc::RepeatedField<global::SLG.Stuff> stuff_ = new pbc::RepeatedField<global::SLG.Stuff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SLG.Stuff> Stuff {
      get { return stuff_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComposeManyStuffRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComposeManyStuffRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!stuff_.Equals(other.stuff_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= stuff_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      stuff_.WriteTo(output, _repeated_stuff_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      size += stuff_.CalculateSize(_repeated_stuff_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComposeManyStuffRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      stuff_.Add(other.stuff_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            stuff_.AddEntriesFrom(input, _repeated_stuff_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
