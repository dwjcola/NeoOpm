// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: msg_expedition.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SLG {

  /// <summary>Holder for reflection information generated from msg_expedition.proto</summary>
  public static partial class MsgExpeditionReflection {

    #region Descriptor
    /// <summary>File descriptor for msg_expedition.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MsgExpeditionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRtc2dfZXhwZWRpdGlvbi5wcm90bxIDU0xHGhRtc2dfd29ybGRzY2VuZS5w",
            "cm90bxoQbXNnX2JhdHRsZS5wcm90byJrCg9TdGFydEV4cGVkaXRpb24SIAoG",
            "dHJvb3BzGAEgAygLMhAuU0xHLkNvbmZpZ1Ryb29wEiUKCmJhdHRsZVBhcmEY",
            "AiABKAsyES5TTEcuV3NCYXR0bGVQYXJhEg8KB3N0YWdlSWQYAyABKA0ipgEK",
            "E0V4cGVkaXRpb25CYXR0bGVFbmQSDwoHc3RhZ2VJZBgBIAEoDRILCgN3aW4Y",
            "AiABKA0SGgoEbGVmdBgDIAMoCzIMLlNMRy5Tb2xkaWVyEhwKBmh1cnRlZBgE",
            "IAMoCzIMLlNMRy5Tb2xkaWVyEhsKBWhlYXZ5GAUgAygLMgwuU0xHLlNvbGRp",
            "ZXISGgoEZGVhZBgGIAMoCzIMLlNMRy5Tb2xkaWVyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SLG.MsgWorldsceneReflection.Descriptor, global::SLG.MsgBattleReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.StartExpedition), global::SLG.StartExpedition.Parser, new[]{ "Troops", "BattlePara", "StageId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.ExpeditionBattleEnd), global::SLG.ExpeditionBattleEnd.Parser, new[]{ "StageId", "Win", "Left", "Hurted", "Heavy", "Dead" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///StartExpedition
  /// </summary>
  public sealed partial class StartExpedition : pb::IMessage<StartExpedition> {
    private static readonly pb::MessageParser<StartExpedition> _parser = new pb::MessageParser<StartExpedition>(() => new StartExpedition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartExpedition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgExpeditionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartExpedition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartExpedition(StartExpedition other) : this() {
      troops_ = other.troops_.Clone();
      battlePara_ = other.battlePara_ != null ? other.battlePara_.Clone() : null;
      stageId_ = other.stageId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartExpedition Clone() {
      return new StartExpedition(this);
    }

    /// <summary>Field number for the "troops" field.</summary>
    public const int TroopsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SLG.ConfigTroop> _repeated_troops_codec
        = pb::FieldCodec.ForMessage(10, global::SLG.ConfigTroop.Parser);
    private readonly pbc::RepeatedField<global::SLG.ConfigTroop> troops_ = new pbc::RepeatedField<global::SLG.ConfigTroop>();
    /// <summary>
    ///多支远征部队
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SLG.ConfigTroop> Troops {
      get { return troops_; }
    }

    /// <summary>Field number for the "battlePara" field.</summary>
    public const int BattleParaFieldNumber = 2;
    private global::SLG.WsBattlePara battlePara_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SLG.WsBattlePara BattlePara {
      get { return battlePara_; }
      set {
        battlePara_ = value;
      }
    }

    /// <summary>Field number for the "stageId" field.</summary>
    public const int StageIdFieldNumber = 3;
    private uint stageId_;
    /// <summary>
    ///关卡ID	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StageId {
      get { return stageId_; }
      set {
        stageId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartExpedition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartExpedition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!troops_.Equals(other.troops_)) return false;
      if (!object.Equals(BattlePara, other.BattlePara)) return false;
      if (StageId != other.StageId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= troops_.GetHashCode();
      if (battlePara_ != null) hash ^= BattlePara.GetHashCode();
      if (StageId != 0) hash ^= StageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      troops_.WriteTo(output, _repeated_troops_codec);
      if (battlePara_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BattlePara);
      }
      if (StageId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(StageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += troops_.CalculateSize(_repeated_troops_codec);
      if (battlePara_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BattlePara);
      }
      if (StageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartExpedition other) {
      if (other == null) {
        return;
      }
      troops_.Add(other.troops_);
      if (other.battlePara_ != null) {
        if (battlePara_ == null) {
          BattlePara = new global::SLG.WsBattlePara();
        }
        BattlePara.MergeFrom(other.BattlePara);
      }
      if (other.StageId != 0) {
        StageId = other.StageId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            troops_.AddEntriesFrom(input, _repeated_troops_codec);
            break;
          }
          case 18: {
            if (battlePara_ == null) {
              BattlePara = new global::SLG.WsBattlePara();
            }
            input.ReadMessage(BattlePara);
            break;
          }
          case 24: {
            StageId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExpeditionBattleEnd : pb::IMessage<ExpeditionBattleEnd> {
    private static readonly pb::MessageParser<ExpeditionBattleEnd> _parser = new pb::MessageParser<ExpeditionBattleEnd>(() => new ExpeditionBattleEnd());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExpeditionBattleEnd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgExpeditionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpeditionBattleEnd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpeditionBattleEnd(ExpeditionBattleEnd other) : this() {
      stageId_ = other.stageId_;
      win_ = other.win_;
      left_ = other.left_.Clone();
      hurted_ = other.hurted_.Clone();
      heavy_ = other.heavy_.Clone();
      dead_ = other.dead_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpeditionBattleEnd Clone() {
      return new ExpeditionBattleEnd(this);
    }

    /// <summary>Field number for the "stageId" field.</summary>
    public const int StageIdFieldNumber = 1;
    private uint stageId_;
    /// <summary>
    ///关卡ID	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StageId {
      get { return stageId_; }
      set {
        stageId_ = value;
      }
    }

    /// <summary>Field number for the "win" field.</summary>
    public const int WinFieldNumber = 2;
    private uint win_;
    /// <summary>
    ///是否胜利	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Win {
      get { return win_; }
      set {
        win_ = value;
      }
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 3;
    private static readonly pb::FieldCodec<global::SLG.Soldier> _repeated_left_codec
        = pb::FieldCodec.ForMessage(26, global::SLG.Soldier.Parser);
    private readonly pbc::RepeatedField<global::SLG.Soldier> left_ = new pbc::RepeatedField<global::SLG.Soldier>();
    /// <summary>
    /// 剩余信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SLG.Soldier> Left {
      get { return left_; }
    }

    /// <summary>Field number for the "hurted" field.</summary>
    public const int HurtedFieldNumber = 4;
    private static readonly pb::FieldCodec<global::SLG.Soldier> _repeated_hurted_codec
        = pb::FieldCodec.ForMessage(34, global::SLG.Soldier.Parser);
    private readonly pbc::RepeatedField<global::SLG.Soldier> hurted_ = new pbc::RepeatedField<global::SLG.Soldier>();
    /// <summary>
    /// 伤兵信息(轻)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SLG.Soldier> Hurted {
      get { return hurted_; }
    }

    /// <summary>Field number for the "heavy" field.</summary>
    public const int HeavyFieldNumber = 5;
    private static readonly pb::FieldCodec<global::SLG.Soldier> _repeated_heavy_codec
        = pb::FieldCodec.ForMessage(42, global::SLG.Soldier.Parser);
    private readonly pbc::RepeatedField<global::SLG.Soldier> heavy_ = new pbc::RepeatedField<global::SLG.Soldier>();
    /// <summary>
    /// 伤兵信息(重)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SLG.Soldier> Heavy {
      get { return heavy_; }
    }

    /// <summary>Field number for the "dead" field.</summary>
    public const int DeadFieldNumber = 6;
    private static readonly pb::FieldCodec<global::SLG.Soldier> _repeated_dead_codec
        = pb::FieldCodec.ForMessage(50, global::SLG.Soldier.Parser);
    private readonly pbc::RepeatedField<global::SLG.Soldier> dead_ = new pbc::RepeatedField<global::SLG.Soldier>();
    /// <summary>
    /// 死兵信息 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SLG.Soldier> Dead {
      get { return dead_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExpeditionBattleEnd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExpeditionBattleEnd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StageId != other.StageId) return false;
      if (Win != other.Win) return false;
      if(!left_.Equals(other.left_)) return false;
      if(!hurted_.Equals(other.hurted_)) return false;
      if(!heavy_.Equals(other.heavy_)) return false;
      if(!dead_.Equals(other.dead_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StageId != 0) hash ^= StageId.GetHashCode();
      if (Win != 0) hash ^= Win.GetHashCode();
      hash ^= left_.GetHashCode();
      hash ^= hurted_.GetHashCode();
      hash ^= heavy_.GetHashCode();
      hash ^= dead_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StageId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StageId);
      }
      if (Win != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Win);
      }
      left_.WriteTo(output, _repeated_left_codec);
      hurted_.WriteTo(output, _repeated_hurted_codec);
      heavy_.WriteTo(output, _repeated_heavy_codec);
      dead_.WriteTo(output, _repeated_dead_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StageId);
      }
      if (Win != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Win);
      }
      size += left_.CalculateSize(_repeated_left_codec);
      size += hurted_.CalculateSize(_repeated_hurted_codec);
      size += heavy_.CalculateSize(_repeated_heavy_codec);
      size += dead_.CalculateSize(_repeated_dead_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExpeditionBattleEnd other) {
      if (other == null) {
        return;
      }
      if (other.StageId != 0) {
        StageId = other.StageId;
      }
      if (other.Win != 0) {
        Win = other.Win;
      }
      left_.Add(other.left_);
      hurted_.Add(other.hurted_);
      heavy_.Add(other.heavy_);
      dead_.Add(other.dead_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StageId = input.ReadUInt32();
            break;
          }
          case 16: {
            Win = input.ReadUInt32();
            break;
          }
          case 26: {
            left_.AddEntriesFrom(input, _repeated_left_codec);
            break;
          }
          case 34: {
            hurted_.AddEntriesFrom(input, _repeated_hurted_codec);
            break;
          }
          case 42: {
            heavy_.AddEntriesFrom(input, _repeated_heavy_codec);
            break;
          }
          case 50: {
            dead_.AddEntriesFrom(input, _repeated_dead_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
