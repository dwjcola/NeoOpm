// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: msg_friend.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SLG {

  /// <summary>Holder for reflection information generated from msg_friend.proto</summary>
  public static partial class MsgFriendReflection {

    #region Descriptor
    /// <summary>File descriptor for msg_friend.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MsgFriendReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBtc2dfZnJpZW5kLnByb3RvEgNTTEciFgoIUGxheWVySWQSCgoCSWQYASAB",
            "KAQiQgoGRnJpZW5kEhAKCHBsYXllcklkGAEgASgEEhIKCnBsYXllckljb24Y",
            "AiABKA0SEgoKcGxheWVyTmFtZRgDIAEoCSJHCgpGcmllbmRMaXN0EhwKB2Zy",
            "aWVuZHMYASADKAsyCy5TTEcuRnJpZW5kEhsKBmFwcGx5cxgCIAMoCzILLlNM",
            "Ry5GcmllbmQqjgEKDkZyaWVuZFJlc3BDb2RlEhQKEEZyaWVuZE9wZXJhdGVf",
            "T0sQABISCg5GcmllbmROb3RFeGlzdBABEhAKDE1BWEZyaWVuZE51bRACEg8K",
            "C01BWEFwcGx5TnVtEAMSFgoSQWxyZWFkeWluQXBwbHlMaXN0EAQSFwoTQWxy",
            "ZWFkeWluRnJpZW5kTGlzdBAFYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SLG.FriendRespCode), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.PlayerId), global::SLG.PlayerId.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.Friend), global::SLG.Friend.Parser, new[]{ "PlayerId", "PlayerIcon", "PlayerName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SLG.FriendList), global::SLG.FriendList.Parser, new[]{ "Friends", "Applys" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum FriendRespCode {
    [pbr::OriginalName("FriendOperate_OK")] FriendOperateOk = 0,
    /// <summary>
    ///给定ID的好友不存在
    /// </summary>
    [pbr::OriginalName("FriendNotExist")] FriendNotExist = 1,
    /// <summary>
    ///好友数量达到上限
    /// </summary>
    [pbr::OriginalName("MAXFriendNum")] MaxfriendNum = 2,
    /// <summary>
    ///好友申请数量达到上限
    /// </summary>
    [pbr::OriginalName("MAXApplyNum")] MaxapplyNum = 3,
    /// <summary>
    ///已经申请过添加好友 
    /// </summary>
    [pbr::OriginalName("AlreadyinApplyList")] AlreadyinApplyList = 4,
    /// <summary>
    ///已经是好友
    /// </summary>
    [pbr::OriginalName("AlreadyinFriendList")] AlreadyinFriendList = 5,
  }

  #endregion

  #region Messages
  public sealed partial class PlayerId : pb::IMessage<PlayerId> {
    private static readonly pb::MessageParser<PlayerId> _parser = new pb::MessageParser<PlayerId>(() => new PlayerId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgFriendReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerId(PlayerId other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerId Clone() {
      return new PlayerId(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    /// <summary>
    ///玩家Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerId other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Friend : pb::IMessage<Friend> {
    private static readonly pb::MessageParser<Friend> _parser = new pb::MessageParser<Friend>(() => new Friend());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Friend> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgFriendReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Friend() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Friend(Friend other) : this() {
      playerId_ = other.playerId_;
      playerIcon_ = other.playerIcon_;
      playerName_ = other.playerName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Friend Clone() {
      return new Friend(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private ulong playerId_;
    /// <summary>
    ///玩家Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "playerIcon" field.</summary>
    public const int PlayerIconFieldNumber = 2;
    private uint playerIcon_;
    /// <summary>
    ///玩家头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PlayerIcon {
      get { return playerIcon_; }
      set {
        playerIcon_ = value;
      }
    }

    /// <summary>Field number for the "playerName" field.</summary>
    public const int PlayerNameFieldNumber = 3;
    private string playerName_ = "";
    /// <summary>
    ///玩家名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Friend);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Friend other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PlayerIcon != other.PlayerIcon) return false;
      if (PlayerName != other.PlayerName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0UL) hash ^= PlayerId.GetHashCode();
      if (PlayerIcon != 0) hash ^= PlayerIcon.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlayerId);
      }
      if (PlayerIcon != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PlayerIcon);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlayerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlayerId);
      }
      if (PlayerIcon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerIcon);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Friend other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0UL) {
        PlayerId = other.PlayerId;
      }
      if (other.PlayerIcon != 0) {
        PlayerIcon = other.PlayerIcon;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadUInt64();
            break;
          }
          case 16: {
            PlayerIcon = input.ReadUInt32();
            break;
          }
          case 26: {
            PlayerName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FriendList : pb::IMessage<FriendList> {
    private static readonly pb::MessageParser<FriendList> _parser = new pb::MessageParser<FriendList>(() => new FriendList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SLG.MsgFriendReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendList(FriendList other) : this() {
      friends_ = other.friends_.Clone();
      applys_ = other.applys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendList Clone() {
      return new FriendList(this);
    }

    /// <summary>Field number for the "friends" field.</summary>
    public const int FriendsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SLG.Friend> _repeated_friends_codec
        = pb::FieldCodec.ForMessage(10, global::SLG.Friend.Parser);
    private readonly pbc::RepeatedField<global::SLG.Friend> friends_ = new pbc::RepeatedField<global::SLG.Friend>();
    /// <summary>
    ///好友
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SLG.Friend> Friends {
      get { return friends_; }
    }

    /// <summary>Field number for the "applys" field.</summary>
    public const int ApplysFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SLG.Friend> _repeated_applys_codec
        = pb::FieldCodec.ForMessage(18, global::SLG.Friend.Parser);
    private readonly pbc::RepeatedField<global::SLG.Friend> applys_ = new pbc::RepeatedField<global::SLG.Friend>();
    /// <summary>
    ///好友申请列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SLG.Friend> Applys {
      get { return applys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!friends_.Equals(other.friends_)) return false;
      if(!applys_.Equals(other.applys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= friends_.GetHashCode();
      hash ^= applys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      friends_.WriteTo(output, _repeated_friends_codec);
      applys_.WriteTo(output, _repeated_applys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += friends_.CalculateSize(_repeated_friends_codec);
      size += applys_.CalculateSize(_repeated_applys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendList other) {
      if (other == null) {
        return;
      }
      friends_.Add(other.friends_);
      applys_.Add(other.applys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            friends_.AddEntriesFrom(input, _repeated_friends_codec);
            break;
          }
          case 18: {
            applys_.AddEntriesFrom(input, _repeated_applys_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
